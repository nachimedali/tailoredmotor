# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _StepRepr.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_StepRepr', [dirname(__file__)])
        except ImportError:
            import _StepRepr
            return _StepRepr
        if fp is not None:
            try:
                _mod = imp.load_module('_StepRepr', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _StepRepr = swig_import_helper()
    del swig_import_helper
else:
    import _StepRepr
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepRepr.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_StepRepr.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_StepRepr.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_StepRepr.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_StepRepr.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_StepRepr.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_StepRepr.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_StepRepr.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_StepRepr.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_StepRepr.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_StepRepr.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_StepRepr.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_StepRepr.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_StepRepr.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_StepRepr.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_StepRepr.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_StepRepr.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _StepRepr.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.MMgt
import OCC.TCollection
import OCC.StepBasic
import OCC.TColStd
import OCC.Interface
import OCC.Message

def register_handle(handle, base_object):
    """
    Inserts the handle into the base object to
    prevent memory corruption in certain cases
    """
    try:
        if base_object.IsKind("Standard_Transient"):
            base_object.thisHandle = handle
            base_object.thisown = False
    except:
        pass

class StepRepr_Array1OfMaterialPropertyRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_StepRepr_MaterialPropertyRepresentation &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_Array1OfMaterialPropertyRepresentation(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfMaterialPropertyRepresentation &
        :rtype: StepRepr_Array1OfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfMaterialPropertyRepresentation &
        :rtype: StepRepr_Array1OfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_ChangeValue(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfMaterialPropertyRepresentation
StepRepr_Array1OfMaterialPropertyRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Init, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Destroy = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Destroy, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.IsAllocated = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_IsAllocated, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Assign = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Assign, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Set = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Set, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Length = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Length, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Lower = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Lower, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Upper = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Upper, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_SetValue, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_Value, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_ChangeValue, None, StepRepr_Array1OfMaterialPropertyRepresentation)
StepRepr_Array1OfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_Array1OfMaterialPropertyRepresentation_swigregister
StepRepr_Array1OfMaterialPropertyRepresentation_swigregister(StepRepr_Array1OfMaterialPropertyRepresentation)

class StepRepr_Array1OfPropertyDefinitionRepresentation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_StepRepr_PropertyDefinitionRepresentation &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_StepRepr_Array1OfPropertyDefinitionRepresentation(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_PropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfPropertyDefinitionRepresentation &
        :rtype: StepRepr_Array1OfPropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfPropertyDefinitionRepresentation &
        :rtype: StepRepr_Array1OfPropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_PropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_PropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_PropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_ChangeValue(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfPropertyDefinitionRepresentation
StepRepr_Array1OfPropertyDefinitionRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Init, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Destroy = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Destroy, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.IsAllocated = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_IsAllocated, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Assign = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Assign, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Set = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Set, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Length = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Length, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Lower = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Lower, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Upper = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Upper, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_SetValue, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_Value, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_ChangeValue, None, StepRepr_Array1OfPropertyDefinitionRepresentation)
StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister
StepRepr_Array1OfPropertyDefinitionRepresentation_swigregister(StepRepr_Array1OfPropertyDefinitionRepresentation)

class StepRepr_Array1OfRepresentationItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_StepRepr_RepresentationItem &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _StepRepr.StepRepr_Array1OfRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_Array1OfRepresentationItem(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfRepresentationItem &
        :rtype: StepRepr_Array1OfRepresentationItem

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: StepRepr_Array1OfRepresentationItem &
        :rtype: StepRepr_Array1OfRepresentationItem

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_Array1OfRepresentationItem_ChangeValue(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_Array1OfRepresentationItem
StepRepr_Array1OfRepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Init, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Destroy = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Destroy, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.IsAllocated = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_IsAllocated, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Assign = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Assign, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Set = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Set, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Length = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Length, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Lower = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Lower, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Upper = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Upper, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.SetValue = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_SetValue, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.Value = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_Value, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem.ChangeValue = new_instancemethod(_StepRepr.StepRepr_Array1OfRepresentationItem_ChangeValue, None, StepRepr_Array1OfRepresentationItem)
StepRepr_Array1OfRepresentationItem_swigregister = _StepRepr.StepRepr_Array1OfRepresentationItem_swigregister
StepRepr_Array1OfRepresentationItem_swigregister(StepRepr_Array1OfRepresentationItem)

class StepRepr_AssemblyComponentUsageSubstitute(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_swiginit(self, _StepRepr.new_StepRepr_AssemblyComponentUsageSubstitute(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDef:
        :type aDef: Handle_TCollection_HAsciiString &
        :param aBase:
        :type aBase: Handle_StepRepr_AssemblyComponentUsage &
        :param aSubs:
        :type aSubs: Handle_StepRepr_AssemblyComponentUsage &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Init(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Name(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetName(self, *args)


    def Definition(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Definition(self, *args)


    def SetDefinition(self, *args):
        """
        :param aDef:
        :type aDef: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetDefinition(self, *args)


    def Base(self, *args):
        """
        :rtype: Handle_StepRepr_AssemblyComponentUsage

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Base(self, *args)


    def SetBase(self, *args):
        """
        :param aBase:
        :type aBase: Handle_StepRepr_AssemblyComponentUsage &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetBase(self, *args)


    def Substitute(self, *args):
        """
        :rtype: Handle_StepRepr_AssemblyComponentUsage

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Substitute(self, *args)


    def SetSubstitute(self, *args):
        """
        :param aSubstitute:
        :type aSubstitute: Handle_StepRepr_AssemblyComponentUsage &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetSubstitute(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_AssemblyComponentUsageSubstitute(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_AssemblyComponentUsageSubstitute
StepRepr_AssemblyComponentUsageSubstitute.Init = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Init, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.Name = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Name, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.SetName = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetName, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.Definition = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Definition, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.SetDefinition = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetDefinition, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.Base = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Base, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.SetBase = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetBase, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.Substitute = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_Substitute, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute.SetSubstitute = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsageSubstitute_SetSubstitute, None, StepRepr_AssemblyComponentUsageSubstitute)
StepRepr_AssemblyComponentUsageSubstitute_swigregister = _StepRepr.StepRepr_AssemblyComponentUsageSubstitute_swigregister
StepRepr_AssemblyComponentUsageSubstitute_swigregister(StepRepr_AssemblyComponentUsageSubstitute)

class Handle_StepRepr_AssemblyComponentUsageSubstitute(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_swiginit(self, _StepRepr.new_Handle_StepRepr_AssemblyComponentUsageSubstitute(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_AssemblyComponentUsageSubstitute
Handle_StepRepr_AssemblyComponentUsageSubstitute.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_Nullify, None, Handle_StepRepr_AssemblyComponentUsageSubstitute)
Handle_StepRepr_AssemblyComponentUsageSubstitute.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_IsNull, None, Handle_StepRepr_AssemblyComponentUsageSubstitute)
Handle_StepRepr_AssemblyComponentUsageSubstitute.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_GetObject, None, Handle_StepRepr_AssemblyComponentUsageSubstitute)
Handle_StepRepr_AssemblyComponentUsageSubstitute_swigregister = _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_swigregister
Handle_StepRepr_AssemblyComponentUsageSubstitute_swigregister(Handle_StepRepr_AssemblyComponentUsageSubstitute)

def Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast(AnObject)
Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast = _StepRepr.Handle_StepRepr_AssemblyComponentUsageSubstitute_DownCast

class StepRepr_CharacterizedDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_CharacterizedDefinition_swiginit(self, _StepRepr.new_StepRepr_CharacterizedDefinition(*args))

    def CaseNum(self, *args):
        """
        * Recognizes a kind of CharacterizedDefinition select type 1 -> CharacterizedObject from StepBasic 2 -> ProductDefinition from StepBasic 3 -> ProductDefinitionRelationship from StepBasic 4 -> ProductDefinitionShape from StepRepr 5 -> ShapeAspect from StepRepr 6 -> ShapeAspectRelationship from StepRepr 7 -> DocumentFile from StepBasic 0 else

        :param ent:
        :type ent: Handle_Standard_Transient &
        :rtype: int

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_CaseNum(self, *args)


    def CharacterizedObject(self, *args):
        """
        * Returns Value as CharacterizedObject (or Null if another type)

        :rtype: Handle_StepBasic_CharacterizedObject

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_CharacterizedObject(self, *args)


    def ProductDefinition(self, *args):
        """
        * Returns Value as ProductDefinition (or Null if another type)

        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinition(self, *args)


    def ProductDefinitionRelationship(self, *args):
        """
        * Returns Value as ProductDefinitionRelationship (or Null if another type)

        :rtype: Handle_StepBasic_ProductDefinitionRelationship

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionRelationship(self, *args)


    def ProductDefinitionShape(self, *args):
        """
        * Returns Value as ProductDefinitionShape (or Null if another type)

        :rtype: Handle_StepRepr_ProductDefinitionShape

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionShape(self, *args)


    def ShapeAspect(self, *args):
        """
        * Returns Value as ShapeAspect (or Null if another type)

        :rtype: Handle_StepRepr_ShapeAspect

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args):
        """
        * Returns Value as ShapeAspectRelationship (or Null if another type)

        :rtype: Handle_StepRepr_ShapeAspectRelationship

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_ShapeAspectRelationship(self, *args)


    def DocumentFile(self, *args):
        """
        * Returns Value as DocumentFile (or Null if another type)

        :rtype: Handle_StepBasic_DocumentFile

        """
        return _StepRepr.StepRepr_CharacterizedDefinition_DocumentFile(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_CharacterizedDefinition
StepRepr_CharacterizedDefinition.CaseNum = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_CaseNum, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.CharacterizedObject = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_CharacterizedObject, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.ProductDefinition = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_ProductDefinition, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.ProductDefinitionRelationship = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionRelationship, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.ProductDefinitionShape = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_ProductDefinitionShape, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.ShapeAspect = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_ShapeAspect, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.ShapeAspectRelationship = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_ShapeAspectRelationship, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition.DocumentFile = new_instancemethod(_StepRepr.StepRepr_CharacterizedDefinition_DocumentFile, None, StepRepr_CharacterizedDefinition)
StepRepr_CharacterizedDefinition_swigregister = _StepRepr.StepRepr_CharacterizedDefinition_swigregister
StepRepr_CharacterizedDefinition_swigregister(StepRepr_CharacterizedDefinition)

class StepRepr_ConfigurationDesign(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ConfigurationDesign_swiginit(self, _StepRepr.new_StepRepr_ConfigurationDesign(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aConfiguration:
        :type aConfiguration: Handle_StepRepr_ConfigurationItem &
        :param aDesign:
        :type aDesign: StepRepr_ConfigurationDesignItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Init(self, *args)


    def Configuration(self, *args):
        """
        * Returns field Configuration

        :rtype: Handle_StepRepr_ConfigurationItem

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Configuration(self, *args)


    def SetConfiguration(self, *args):
        """
        * Set field Configuration

        :param Configuration:
        :type Configuration: Handle_StepRepr_ConfigurationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_SetConfiguration(self, *args)


    def Design(self, *args):
        """
        * Returns field Design

        :rtype: StepRepr_ConfigurationDesignItem

        """
        return _StepRepr.StepRepr_ConfigurationDesign_Design(self, *args)


    def SetDesign(self, *args):
        """
        * Set field Design

        :param Design:
        :type Design: StepRepr_ConfigurationDesignItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationDesign_SetDesign(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ConfigurationDesign(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationDesign
StepRepr_ConfigurationDesign.Init = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesign_Init, None, StepRepr_ConfigurationDesign)
StepRepr_ConfigurationDesign.Configuration = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesign_Configuration, None, StepRepr_ConfigurationDesign)
StepRepr_ConfigurationDesign.SetConfiguration = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesign_SetConfiguration, None, StepRepr_ConfigurationDesign)
StepRepr_ConfigurationDesign.Design = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesign_Design, None, StepRepr_ConfigurationDesign)
StepRepr_ConfigurationDesign.SetDesign = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesign_SetDesign, None, StepRepr_ConfigurationDesign)
StepRepr_ConfigurationDesign_swigregister = _StepRepr.StepRepr_ConfigurationDesign_swigregister
StepRepr_ConfigurationDesign_swigregister(StepRepr_ConfigurationDesign)

class Handle_StepRepr_ConfigurationDesign(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ConfigurationDesign_swiginit(self, _StepRepr.new_Handle_StepRepr_ConfigurationDesign(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ConfigurationDesign_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ConfigurationDesign
Handle_StepRepr_ConfigurationDesign.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationDesign_Nullify, None, Handle_StepRepr_ConfigurationDesign)
Handle_StepRepr_ConfigurationDesign.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationDesign_IsNull, None, Handle_StepRepr_ConfigurationDesign)
Handle_StepRepr_ConfigurationDesign.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationDesign_GetObject, None, Handle_StepRepr_ConfigurationDesign)
Handle_StepRepr_ConfigurationDesign_swigregister = _StepRepr.Handle_StepRepr_ConfigurationDesign_swigregister
Handle_StepRepr_ConfigurationDesign_swigregister(Handle_StepRepr_ConfigurationDesign)

def Handle_StepRepr_ConfigurationDesign_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ConfigurationDesign_DownCast(AnObject)
Handle_StepRepr_ConfigurationDesign_DownCast = _StepRepr.Handle_StepRepr_ConfigurationDesign_DownCast

class StepRepr_ConfigurationDesignItem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ConfigurationDesignItem_swiginit(self, _StepRepr.new_StepRepr_ConfigurationDesignItem(*args))

    def CaseNum(self, *args):
        """
        * Recognizes a kind of ConfigurationDesignItem select type 1 -> ProductDefinition from StepBasic 2 -> ProductDefinitionFormation from StepBasic 0 else

        :param ent:
        :type ent: Handle_Standard_Transient &
        :rtype: int

        """
        return _StepRepr.StepRepr_ConfigurationDesignItem_CaseNum(self, *args)


    def ProductDefinition(self, *args):
        """
        * Returns Value as ProductDefinition (or Null if another type)

        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinition(self, *args)


    def ProductDefinitionFormation(self, *args):
        """
        * Returns Value as ProductDefinitionFormation (or Null if another type)

        :rtype: Handle_StepBasic_ProductDefinitionFormation

        """
        return _StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinitionFormation(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationDesignItem
StepRepr_ConfigurationDesignItem.CaseNum = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesignItem_CaseNum, None, StepRepr_ConfigurationDesignItem)
StepRepr_ConfigurationDesignItem.ProductDefinition = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinition, None, StepRepr_ConfigurationDesignItem)
StepRepr_ConfigurationDesignItem.ProductDefinitionFormation = new_instancemethod(_StepRepr.StepRepr_ConfigurationDesignItem_ProductDefinitionFormation, None, StepRepr_ConfigurationDesignItem)
StepRepr_ConfigurationDesignItem_swigregister = _StepRepr.StepRepr_ConfigurationDesignItem_swigregister
StepRepr_ConfigurationDesignItem_swigregister(StepRepr_ConfigurationDesignItem)

class StepRepr_ConfigurationEffectivity(OCC.StepBasic.StepBasic_ProductDefinitionEffectivity):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ConfigurationEffectivity_swiginit(self, _StepRepr.new_StepRepr_ConfigurationEffectivity(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aEffectivity_Id:
        :type aEffectivity_Id: Handle_TCollection_HAsciiString &
        :param aProductDefinitionEffectivity_Usage:
        :type aProductDefinitionEffectivity_Usage: Handle_StepBasic_ProductDefinitionRelationship &
        :param aConfiguration:
        :type aConfiguration: Handle_StepRepr_ConfigurationDesign &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_Init(self, *args)


    def Configuration(self, *args):
        """
        * Returns field Configuration

        :rtype: Handle_StepRepr_ConfigurationDesign

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_Configuration(self, *args)


    def SetConfiguration(self, *args):
        """
        * Set field Configuration

        :param Configuration:
        :type Configuration: Handle_StepRepr_ConfigurationDesign &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationEffectivity_SetConfiguration(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ConfigurationEffectivity(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationEffectivity
StepRepr_ConfigurationEffectivity.Init = new_instancemethod(_StepRepr.StepRepr_ConfigurationEffectivity_Init, None, StepRepr_ConfigurationEffectivity)
StepRepr_ConfigurationEffectivity.Configuration = new_instancemethod(_StepRepr.StepRepr_ConfigurationEffectivity_Configuration, None, StepRepr_ConfigurationEffectivity)
StepRepr_ConfigurationEffectivity.SetConfiguration = new_instancemethod(_StepRepr.StepRepr_ConfigurationEffectivity_SetConfiguration, None, StepRepr_ConfigurationEffectivity)
StepRepr_ConfigurationEffectivity_swigregister = _StepRepr.StepRepr_ConfigurationEffectivity_swigregister
StepRepr_ConfigurationEffectivity_swigregister(StepRepr_ConfigurationEffectivity)

class Handle_StepRepr_ConfigurationEffectivity(OCC.StepBasic.Handle_StepBasic_ProductDefinitionEffectivity):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ConfigurationEffectivity_swiginit(self, _StepRepr.new_Handle_StepRepr_ConfigurationEffectivity(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ConfigurationEffectivity_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ConfigurationEffectivity
Handle_StepRepr_ConfigurationEffectivity.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationEffectivity_Nullify, None, Handle_StepRepr_ConfigurationEffectivity)
Handle_StepRepr_ConfigurationEffectivity.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationEffectivity_IsNull, None, Handle_StepRepr_ConfigurationEffectivity)
Handle_StepRepr_ConfigurationEffectivity.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationEffectivity_GetObject, None, Handle_StepRepr_ConfigurationEffectivity)
Handle_StepRepr_ConfigurationEffectivity_swigregister = _StepRepr.Handle_StepRepr_ConfigurationEffectivity_swigregister
Handle_StepRepr_ConfigurationEffectivity_swigregister(Handle_StepRepr_ConfigurationEffectivity)

def Handle_StepRepr_ConfigurationEffectivity_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ConfigurationEffectivity_DownCast(AnObject)
Handle_StepRepr_ConfigurationEffectivity_DownCast = _StepRepr.Handle_StepRepr_ConfigurationEffectivity_DownCast

class StepRepr_ConfigurationItem(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ConfigurationItem_swiginit(self, _StepRepr.new_StepRepr_ConfigurationItem(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aId:
        :type aId: Handle_TCollection_HAsciiString &
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param hasDescription:
        :type hasDescription: bool
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aItemConcept:
        :type aItemConcept: Handle_StepRepr_ProductConcept &
        :param hasPurpose:
        :type hasPurpose: bool
        :param aPurpose:
        :type aPurpose: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_Init(self, *args)


    def Id(self, *args):
        """
        * Returns field Id

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ConfigurationItem_Id(self, *args)


    def SetId(self, *args):
        """
        * Set field Id

        :param Id:
        :type Id: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetId(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ConfigurationItem_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ConfigurationItem_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetDescription(self, *args)


    def HasDescription(self, *args):
        """
        * Returns True if optional field Description is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_ConfigurationItem_HasDescription(self, *args)


    def ItemConcept(self, *args):
        """
        * Returns field ItemConcept

        :rtype: Handle_StepRepr_ProductConcept

        """
        return _StepRepr.StepRepr_ConfigurationItem_ItemConcept(self, *args)


    def SetItemConcept(self, *args):
        """
        * Set field ItemConcept

        :param ItemConcept:
        :type ItemConcept: Handle_StepRepr_ProductConcept &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetItemConcept(self, *args)


    def Purpose(self, *args):
        """
        * Returns field Purpose

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ConfigurationItem_Purpose(self, *args)


    def SetPurpose(self, *args):
        """
        * Set field Purpose

        :param Purpose:
        :type Purpose: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ConfigurationItem_SetPurpose(self, *args)


    def HasPurpose(self, *args):
        """
        * Returns True if optional field Purpose is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_ConfigurationItem_HasPurpose(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ConfigurationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ConfigurationItem
StepRepr_ConfigurationItem.Init = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_Init, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.Id = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_Id, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.SetId = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_SetId, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.Name = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_Name, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.SetName = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_SetName, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.Description = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_Description, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.SetDescription = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_SetDescription, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.HasDescription = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_HasDescription, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.ItemConcept = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_ItemConcept, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.SetItemConcept = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_SetItemConcept, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.Purpose = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_Purpose, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.SetPurpose = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_SetPurpose, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem.HasPurpose = new_instancemethod(_StepRepr.StepRepr_ConfigurationItem_HasPurpose, None, StepRepr_ConfigurationItem)
StepRepr_ConfigurationItem_swigregister = _StepRepr.StepRepr_ConfigurationItem_swigregister
StepRepr_ConfigurationItem_swigregister(StepRepr_ConfigurationItem)

class Handle_StepRepr_ConfigurationItem(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ConfigurationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_ConfigurationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ConfigurationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ConfigurationItem
Handle_StepRepr_ConfigurationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationItem_Nullify, None, Handle_StepRepr_ConfigurationItem)
Handle_StepRepr_ConfigurationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationItem_IsNull, None, Handle_StepRepr_ConfigurationItem)
Handle_StepRepr_ConfigurationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ConfigurationItem_GetObject, None, Handle_StepRepr_ConfigurationItem)
Handle_StepRepr_ConfigurationItem_swigregister = _StepRepr.Handle_StepRepr_ConfigurationItem_swigregister
Handle_StepRepr_ConfigurationItem_swigregister(Handle_StepRepr_ConfigurationItem)

def Handle_StepRepr_ConfigurationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ConfigurationItem_DownCast(AnObject)
Handle_StepRepr_ConfigurationItem_DownCast = _StepRepr.Handle_StepRepr_ConfigurationItem_DownCast

class StepRepr_DataEnvironment(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_DataEnvironment_swiginit(self, _StepRepr.new_StepRepr_DataEnvironment(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aElements:
        :type aElements: Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_DataEnvironment_Init(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_DataEnvironment_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_DataEnvironment_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetDescription(self, *args)


    def Elements(self, *args):
        """
        * Returns field Elements

        :rtype: Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_DataEnvironment_Elements(self, *args)


    def SetElements(self, *args):
        """
        * Set field Elements

        :param Elements:
        :type Elements: Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_DataEnvironment_SetElements(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_DataEnvironment(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_DataEnvironment
StepRepr_DataEnvironment.Init = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_Init, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.Name = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_Name, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.SetName = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_SetName, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.Description = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_Description, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.SetDescription = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_SetDescription, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.Elements = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_Elements, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment.SetElements = new_instancemethod(_StepRepr.StepRepr_DataEnvironment_SetElements, None, StepRepr_DataEnvironment)
StepRepr_DataEnvironment_swigregister = _StepRepr.StepRepr_DataEnvironment_swigregister
StepRepr_DataEnvironment_swigregister(StepRepr_DataEnvironment)

class Handle_StepRepr_DataEnvironment(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_DataEnvironment_swiginit(self, _StepRepr.new_Handle_StepRepr_DataEnvironment(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_DataEnvironment_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_DataEnvironment
Handle_StepRepr_DataEnvironment.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_DataEnvironment_Nullify, None, Handle_StepRepr_DataEnvironment)
Handle_StepRepr_DataEnvironment.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_DataEnvironment_IsNull, None, Handle_StepRepr_DataEnvironment)
Handle_StepRepr_DataEnvironment.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_DataEnvironment_GetObject, None, Handle_StepRepr_DataEnvironment)
Handle_StepRepr_DataEnvironment_swigregister = _StepRepr.Handle_StepRepr_DataEnvironment_swigregister
Handle_StepRepr_DataEnvironment_swigregister(Handle_StepRepr_DataEnvironment)

def Handle_StepRepr_DataEnvironment_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_DataEnvironment_DownCast(AnObject)
Handle_StepRepr_DataEnvironment_DownCast = _StepRepr.Handle_StepRepr_DataEnvironment_DownCast

class StepRepr_FunctionallyDefinedTransformation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a FunctionallyDefinedTransformation

        :rtype: None

        """
        _StepRepr.StepRepr_FunctionallyDefinedTransformation_swiginit(self, _StepRepr.new_StepRepr_FunctionallyDefinedTransformation(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: void

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Name(self, *args)


    def SetDescription(self, *args):
        """
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_SetDescription(self, *args)


    def Description(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_FunctionallyDefinedTransformation_Description(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_FunctionallyDefinedTransformation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_FunctionallyDefinedTransformation
StepRepr_FunctionallyDefinedTransformation.Init = new_instancemethod(_StepRepr.StepRepr_FunctionallyDefinedTransformation_Init, None, StepRepr_FunctionallyDefinedTransformation)
StepRepr_FunctionallyDefinedTransformation.SetName = new_instancemethod(_StepRepr.StepRepr_FunctionallyDefinedTransformation_SetName, None, StepRepr_FunctionallyDefinedTransformation)
StepRepr_FunctionallyDefinedTransformation.Name = new_instancemethod(_StepRepr.StepRepr_FunctionallyDefinedTransformation_Name, None, StepRepr_FunctionallyDefinedTransformation)
StepRepr_FunctionallyDefinedTransformation.SetDescription = new_instancemethod(_StepRepr.StepRepr_FunctionallyDefinedTransformation_SetDescription, None, StepRepr_FunctionallyDefinedTransformation)
StepRepr_FunctionallyDefinedTransformation.Description = new_instancemethod(_StepRepr.StepRepr_FunctionallyDefinedTransformation_Description, None, StepRepr_FunctionallyDefinedTransformation)
StepRepr_FunctionallyDefinedTransformation_swigregister = _StepRepr.StepRepr_FunctionallyDefinedTransformation_swigregister
StepRepr_FunctionallyDefinedTransformation_swigregister(StepRepr_FunctionallyDefinedTransformation)

class Handle_StepRepr_FunctionallyDefinedTransformation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_swiginit(self, _StepRepr.new_Handle_StepRepr_FunctionallyDefinedTransformation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_FunctionallyDefinedTransformation
Handle_StepRepr_FunctionallyDefinedTransformation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_Nullify, None, Handle_StepRepr_FunctionallyDefinedTransformation)
Handle_StepRepr_FunctionallyDefinedTransformation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_IsNull, None, Handle_StepRepr_FunctionallyDefinedTransformation)
Handle_StepRepr_FunctionallyDefinedTransformation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_GetObject, None, Handle_StepRepr_FunctionallyDefinedTransformation)
Handle_StepRepr_FunctionallyDefinedTransformation_swigregister = _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_swigregister
Handle_StepRepr_FunctionallyDefinedTransformation_swigregister(Handle_StepRepr_FunctionallyDefinedTransformation)

def Handle_StepRepr_FunctionallyDefinedTransformation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_DownCast(AnObject)
Handle_StepRepr_FunctionallyDefinedTransformation_DownCast = _StepRepr.Handle_StepRepr_FunctionallyDefinedTransformation_DownCast

class StepRepr_HArray1OfMaterialPropertyRepresentation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_HArray1OfMaterialPropertyRepresentation(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: StepRepr_Array1OfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: StepRepr_Array1OfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_ChangeArray1(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_HArray1OfMaterialPropertyRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfMaterialPropertyRepresentation
StepRepr_HArray1OfMaterialPropertyRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Init, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.Length = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Length, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.Lower = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Lower, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.Upper = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Upper, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_SetValue, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Value, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_ChangeValue, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.Array1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_Array1, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation.ChangeArray1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_ChangeArray1, None, StepRepr_HArray1OfMaterialPropertyRepresentation)
StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister
StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister(StepRepr_HArray1OfMaterialPropertyRepresentation)

class Handle_StepRepr_HArray1OfMaterialPropertyRepresentation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_HArray1OfMaterialPropertyRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_HArray1OfMaterialPropertyRepresentation
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_Nullify, None, Handle_StepRepr_HArray1OfMaterialPropertyRepresentation)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_IsNull, None, Handle_StepRepr_HArray1OfMaterialPropertyRepresentation)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_GetObject, None, Handle_StepRepr_HArray1OfMaterialPropertyRepresentation)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister = _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_swigregister(Handle_StepRepr_HArray1OfMaterialPropertyRepresentation)

def Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast(AnObject)
Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_HArray1OfMaterialPropertyRepresentation_DownCast

class StepRepr_HArray1OfPropertyDefinitionRepresentation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_StepRepr_PropertyDefinitionRepresentation &
        :rtype: None

        """
        _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_StepRepr_HArray1OfPropertyDefinitionRepresentation(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_PropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_PropertyDefinitionRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_PropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_PropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: StepRepr_Array1OfPropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: StepRepr_Array1OfPropertyDefinitionRepresentation

        """
        return _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_ChangeArray1(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfPropertyDefinitionRepresentation
StepRepr_HArray1OfPropertyDefinitionRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Init, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.Length = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Length, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.Lower = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Lower, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.Upper = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Upper, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_SetValue, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Value, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_ChangeValue, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.Array1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_Array1, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation.ChangeArray1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_ChangeArray1, None, StepRepr_HArray1OfPropertyDefinitionRepresentation)
StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister
StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister(StepRepr_HArray1OfPropertyDefinitionRepresentation)

class Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_Nullify, None, Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_IsNull, None, Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_GetObject, None, Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister = _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_swigregister(Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation)

def Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast(AnObject)
Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation_DownCast

class StepRepr_HArray1OfRepresentationItem(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        _StepRepr.StepRepr_HArray1OfRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_HArray1OfRepresentationItem(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: StepRepr_Array1OfRepresentationItem

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: StepRepr_Array1OfRepresentationItem

        """
        return _StepRepr.StepRepr_HArray1OfRepresentationItem_ChangeArray1(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_HArray1OfRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_HArray1OfRepresentationItem
StepRepr_HArray1OfRepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Init, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.Length = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Length, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.Lower = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Lower, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.Upper = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Upper, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.SetValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_SetValue, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.Value = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Value, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.ChangeValue = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_ChangeValue, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.Array1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_Array1, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem.ChangeArray1 = new_instancemethod(_StepRepr.StepRepr_HArray1OfRepresentationItem_ChangeArray1, None, StepRepr_HArray1OfRepresentationItem)
StepRepr_HArray1OfRepresentationItem_swigregister = _StepRepr.StepRepr_HArray1OfRepresentationItem_swigregister
StepRepr_HArray1OfRepresentationItem_swigregister(StepRepr_HArray1OfRepresentationItem)

class Handle_StepRepr_HArray1OfRepresentationItem(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_HArray1OfRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_HArray1OfRepresentationItem
Handle_StepRepr_HArray1OfRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_Nullify, None, Handle_StepRepr_HArray1OfRepresentationItem)
Handle_StepRepr_HArray1OfRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_IsNull, None, Handle_StepRepr_HArray1OfRepresentationItem)
Handle_StepRepr_HArray1OfRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_GetObject, None, Handle_StepRepr_HArray1OfRepresentationItem)
Handle_StepRepr_HArray1OfRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_swigregister
Handle_StepRepr_HArray1OfRepresentationItem_swigregister(Handle_StepRepr_HArray1OfRepresentationItem)

def Handle_StepRepr_HArray1OfRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_DownCast(AnObject)
Handle_StepRepr_HArray1OfRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_HArray1OfRepresentationItem_DownCast

class StepRepr_HSequenceOfMaterialPropertyRepresentation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_HSequenceOfMaterialPropertyRepresentation(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: StepRepr_SequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: StepRepr_SequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ShallowCopy(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_HSequenceOfMaterialPropertyRepresentation
StepRepr_HSequenceOfMaterialPropertyRepresentation.IsEmpty = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_IsEmpty, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Length = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Length, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Clear = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Clear, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Append = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Append, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Prepend = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Prepend, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Reverse = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Reverse, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.InsertBefore = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_InsertBefore, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.InsertAfter = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_InsertAfter, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Exchange = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Exchange, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Split = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Split, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_SetValue, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Value, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ChangeValue, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Remove = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Remove, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.Sequence = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_Sequence, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.ChangeSequence = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ChangeSequence, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation.ShallowCopy = new_instancemethod(_StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_ShallowCopy, None, StepRepr_HSequenceOfMaterialPropertyRepresentation)
StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister
StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister(StepRepr_HSequenceOfMaterialPropertyRepresentation)

class Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_Nullify, None, Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_IsNull, None, Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_GetObject, None, Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_swigregister(Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation)

def Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast(AnObject)
Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_HSequenceOfMaterialPropertyRepresentation_DownCast

class StepRepr_HSequenceOfRepresentationItem(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_HSequenceOfRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_HSequenceOfRepresentationItem(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_StepRepr_HSequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_HSequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: StepRepr_SequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: StepRepr_SequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_StepRepr_HSequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_HSequenceOfRepresentationItem_ShallowCopy(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_HSequenceOfRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_HSequenceOfRepresentationItem
StepRepr_HSequenceOfRepresentationItem.IsEmpty = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_IsEmpty, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Length = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Length, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Clear = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Clear, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Append = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Append, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Prepend = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Prepend, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Reverse = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Reverse, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.InsertBefore = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_InsertBefore, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.InsertAfter = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_InsertAfter, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Exchange = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Exchange, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Split = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Split, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.SetValue = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_SetValue, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Value = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Value, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.ChangeValue = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_ChangeValue, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Remove = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Remove, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.Sequence = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_Sequence, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.ChangeSequence = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_ChangeSequence, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem.ShallowCopy = new_instancemethod(_StepRepr.StepRepr_HSequenceOfRepresentationItem_ShallowCopy, None, StepRepr_HSequenceOfRepresentationItem)
StepRepr_HSequenceOfRepresentationItem_swigregister = _StepRepr.StepRepr_HSequenceOfRepresentationItem_swigregister
StepRepr_HSequenceOfRepresentationItem_swigregister(StepRepr_HSequenceOfRepresentationItem)

class Handle_StepRepr_HSequenceOfRepresentationItem(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_HSequenceOfRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_HSequenceOfRepresentationItem
Handle_StepRepr_HSequenceOfRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_Nullify, None, Handle_StepRepr_HSequenceOfRepresentationItem)
Handle_StepRepr_HSequenceOfRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_IsNull, None, Handle_StepRepr_HSequenceOfRepresentationItem)
Handle_StepRepr_HSequenceOfRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_GetObject, None, Handle_StepRepr_HSequenceOfRepresentationItem)
Handle_StepRepr_HSequenceOfRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_swigregister
Handle_StepRepr_HSequenceOfRepresentationItem_swigregister(Handle_StepRepr_HSequenceOfRepresentationItem)

def Handle_StepRepr_HSequenceOfRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_DownCast(AnObject)
Handle_StepRepr_HSequenceOfRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_HSequenceOfRepresentationItem_DownCast

class StepRepr_ItemDefinedTransformation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ItemDefinedTransformation_swiginit(self, _StepRepr.new_StepRepr_ItemDefinedTransformation(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aTransformItem1:
        :type aTransformItem1: Handle_StepRepr_RepresentationItem &
        :param aTransformItem2:
        :type aTransformItem2: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Name(self, *args)


    def SetDescription(self, *args):
        """
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetDescription(self, *args)


    def Description(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_Description(self, *args)


    def SetTransformItem1(self, *args):
        """
        :param aItem:
        :type aItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem1(self, *args)


    def TransformItem1(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_TransformItem1(self, *args)


    def SetTransformItem2(self, *args):
        """
        :param aItem:
        :type aItem: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem2(self, *args)


    def TransformItem2(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_ItemDefinedTransformation_TransformItem2(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ItemDefinedTransformation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ItemDefinedTransformation
StepRepr_ItemDefinedTransformation.Init = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_Init, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.SetName = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_SetName, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.Name = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_Name, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.SetDescription = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_SetDescription, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.Description = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_Description, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.SetTransformItem1 = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem1, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.TransformItem1 = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_TransformItem1, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.SetTransformItem2 = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_SetTransformItem2, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation.TransformItem2 = new_instancemethod(_StepRepr.StepRepr_ItemDefinedTransformation_TransformItem2, None, StepRepr_ItemDefinedTransformation)
StepRepr_ItemDefinedTransformation_swigregister = _StepRepr.StepRepr_ItemDefinedTransformation_swigregister
StepRepr_ItemDefinedTransformation_swigregister(StepRepr_ItemDefinedTransformation)

class Handle_StepRepr_ItemDefinedTransformation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ItemDefinedTransformation_swiginit(self, _StepRepr.new_Handle_StepRepr_ItemDefinedTransformation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ItemDefinedTransformation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ItemDefinedTransformation
Handle_StepRepr_ItemDefinedTransformation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ItemDefinedTransformation_Nullify, None, Handle_StepRepr_ItemDefinedTransformation)
Handle_StepRepr_ItemDefinedTransformation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ItemDefinedTransformation_IsNull, None, Handle_StepRepr_ItemDefinedTransformation)
Handle_StepRepr_ItemDefinedTransformation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ItemDefinedTransformation_GetObject, None, Handle_StepRepr_ItemDefinedTransformation)
Handle_StepRepr_ItemDefinedTransformation_swigregister = _StepRepr.Handle_StepRepr_ItemDefinedTransformation_swigregister
Handle_StepRepr_ItemDefinedTransformation_swigregister(Handle_StepRepr_ItemDefinedTransformation)

def Handle_StepRepr_ItemDefinedTransformation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ItemDefinedTransformation_DownCast(AnObject)
Handle_StepRepr_ItemDefinedTransformation_DownCast = _StepRepr.Handle_StepRepr_ItemDefinedTransformation_DownCast

class StepRepr_MaterialDesignation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_MaterialDesignation_swiginit(self, _StepRepr.new_StepRepr_MaterialDesignation(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aOfDefinition:
        :type aOfDefinition: StepRepr_CharacterizedDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_MaterialDesignation_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_MaterialDesignation_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_MaterialDesignation_Name(self, *args)


    def SetOfDefinition(self, *args):
        """
        :param aOfDefinition:
        :type aOfDefinition: StepRepr_CharacterizedDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_MaterialDesignation_SetOfDefinition(self, *args)


    def OfDefinition(self, *args):
        """
        :rtype: StepRepr_CharacterizedDefinition

        """
        return _StepRepr.StepRepr_MaterialDesignation_OfDefinition(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MaterialDesignation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialDesignation
StepRepr_MaterialDesignation.Init = new_instancemethod(_StepRepr.StepRepr_MaterialDesignation_Init, None, StepRepr_MaterialDesignation)
StepRepr_MaterialDesignation.SetName = new_instancemethod(_StepRepr.StepRepr_MaterialDesignation_SetName, None, StepRepr_MaterialDesignation)
StepRepr_MaterialDesignation.Name = new_instancemethod(_StepRepr.StepRepr_MaterialDesignation_Name, None, StepRepr_MaterialDesignation)
StepRepr_MaterialDesignation.SetOfDefinition = new_instancemethod(_StepRepr.StepRepr_MaterialDesignation_SetOfDefinition, None, StepRepr_MaterialDesignation)
StepRepr_MaterialDesignation.OfDefinition = new_instancemethod(_StepRepr.StepRepr_MaterialDesignation_OfDefinition, None, StepRepr_MaterialDesignation)
StepRepr_MaterialDesignation_swigregister = _StepRepr.StepRepr_MaterialDesignation_swigregister
StepRepr_MaterialDesignation_swigregister(StepRepr_MaterialDesignation)

class Handle_StepRepr_MaterialDesignation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MaterialDesignation_swiginit(self, _StepRepr.new_Handle_StepRepr_MaterialDesignation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MaterialDesignation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MaterialDesignation
Handle_StepRepr_MaterialDesignation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialDesignation_Nullify, None, Handle_StepRepr_MaterialDesignation)
Handle_StepRepr_MaterialDesignation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialDesignation_IsNull, None, Handle_StepRepr_MaterialDesignation)
Handle_StepRepr_MaterialDesignation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialDesignation_GetObject, None, Handle_StepRepr_MaterialDesignation)
Handle_StepRepr_MaterialDesignation_swigregister = _StepRepr.Handle_StepRepr_MaterialDesignation_swigregister
Handle_StepRepr_MaterialDesignation_swigregister(Handle_StepRepr_MaterialDesignation)

def Handle_StepRepr_MaterialDesignation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MaterialDesignation_DownCast(AnObject)
Handle_StepRepr_MaterialDesignation_DownCast = _StepRepr.Handle_StepRepr_MaterialDesignation_DownCast

class StepRepr_ProductConcept(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ProductConcept_swiginit(self, _StepRepr.new_StepRepr_ProductConcept(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aId:
        :type aId: Handle_TCollection_HAsciiString &
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param hasDescription:
        :type hasDescription: bool
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aMarketContext:
        :type aMarketContext: Handle_StepBasic_ProductConceptContext &
        :rtype: None

        """
        return _StepRepr.StepRepr_ProductConcept_Init(self, *args)


    def Id(self, *args):
        """
        * Returns field Id

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ProductConcept_Id(self, *args)


    def SetId(self, *args):
        """
        * Set field Id

        :param Id:
        :type Id: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ProductConcept_SetId(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ProductConcept_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ProductConcept_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ProductConcept_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ProductConcept_SetDescription(self, *args)


    def HasDescription(self, *args):
        """
        * Returns True if optional field Description is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_ProductConcept_HasDescription(self, *args)


    def MarketContext(self, *args):
        """
        * Returns field MarketContext

        :rtype: Handle_StepBasic_ProductConceptContext

        """
        return _StepRepr.StepRepr_ProductConcept_MarketContext(self, *args)


    def SetMarketContext(self, *args):
        """
        * Set field MarketContext

        :param MarketContext:
        :type MarketContext: Handle_StepBasic_ProductConceptContext &
        :rtype: None

        """
        return _StepRepr.StepRepr_ProductConcept_SetMarketContext(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ProductConcept(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductConcept
StepRepr_ProductConcept.Init = new_instancemethod(_StepRepr.StepRepr_ProductConcept_Init, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.Id = new_instancemethod(_StepRepr.StepRepr_ProductConcept_Id, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.SetId = new_instancemethod(_StepRepr.StepRepr_ProductConcept_SetId, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.Name = new_instancemethod(_StepRepr.StepRepr_ProductConcept_Name, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.SetName = new_instancemethod(_StepRepr.StepRepr_ProductConcept_SetName, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.Description = new_instancemethod(_StepRepr.StepRepr_ProductConcept_Description, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.SetDescription = new_instancemethod(_StepRepr.StepRepr_ProductConcept_SetDescription, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.HasDescription = new_instancemethod(_StepRepr.StepRepr_ProductConcept_HasDescription, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.MarketContext = new_instancemethod(_StepRepr.StepRepr_ProductConcept_MarketContext, None, StepRepr_ProductConcept)
StepRepr_ProductConcept.SetMarketContext = new_instancemethod(_StepRepr.StepRepr_ProductConcept_SetMarketContext, None, StepRepr_ProductConcept)
StepRepr_ProductConcept_swigregister = _StepRepr.StepRepr_ProductConcept_swigregister
StepRepr_ProductConcept_swigregister(StepRepr_ProductConcept)

class Handle_StepRepr_ProductConcept(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ProductConcept_swiginit(self, _StepRepr.new_Handle_StepRepr_ProductConcept(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ProductConcept_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ProductConcept
Handle_StepRepr_ProductConcept.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ProductConcept_Nullify, None, Handle_StepRepr_ProductConcept)
Handle_StepRepr_ProductConcept.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ProductConcept_IsNull, None, Handle_StepRepr_ProductConcept)
Handle_StepRepr_ProductConcept.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ProductConcept_GetObject, None, Handle_StepRepr_ProductConcept)
Handle_StepRepr_ProductConcept_swigregister = _StepRepr.Handle_StepRepr_ProductConcept_swigregister
Handle_StepRepr_ProductConcept_swigregister(Handle_StepRepr_ProductConcept)

def Handle_StepRepr_ProductConcept_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ProductConcept_DownCast(AnObject)
Handle_StepRepr_ProductConcept_DownCast = _StepRepr.Handle_StepRepr_ProductConcept_DownCast

class StepRepr_ProductDefinitionUsage(OCC.StepBasic.StepBasic_ProductDefinitionRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ProductDefinitionUsage_swiginit(self, _StepRepr.new_StepRepr_ProductDefinitionUsage(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ProductDefinitionUsage(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductDefinitionUsage
StepRepr_ProductDefinitionUsage_swigregister = _StepRepr.StepRepr_ProductDefinitionUsage_swigregister
StepRepr_ProductDefinitionUsage_swigregister(StepRepr_ProductDefinitionUsage)

class Handle_StepRepr_ProductDefinitionUsage(OCC.StepBasic.Handle_StepBasic_ProductDefinitionRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ProductDefinitionUsage_swiginit(self, _StepRepr.new_Handle_StepRepr_ProductDefinitionUsage(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ProductDefinitionUsage_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ProductDefinitionUsage
Handle_StepRepr_ProductDefinitionUsage.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionUsage_Nullify, None, Handle_StepRepr_ProductDefinitionUsage)
Handle_StepRepr_ProductDefinitionUsage.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionUsage_IsNull, None, Handle_StepRepr_ProductDefinitionUsage)
Handle_StepRepr_ProductDefinitionUsage.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionUsage_GetObject, None, Handle_StepRepr_ProductDefinitionUsage)
Handle_StepRepr_ProductDefinitionUsage_swigregister = _StepRepr.Handle_StepRepr_ProductDefinitionUsage_swigregister
Handle_StepRepr_ProductDefinitionUsage_swigregister(Handle_StepRepr_ProductDefinitionUsage)

def Handle_StepRepr_ProductDefinitionUsage_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ProductDefinitionUsage_DownCast(AnObject)
Handle_StepRepr_ProductDefinitionUsage_DownCast = _StepRepr.Handle_StepRepr_ProductDefinitionUsage_DownCast

class StepRepr_PropertyDefinition(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_PropertyDefinition_swiginit(self, _StepRepr.new_StepRepr_PropertyDefinition(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param hasDescription:
        :type hasDescription: bool
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aDefinition:
        :type aDefinition: StepRepr_CharacterizedDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinition_Init(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_PropertyDefinition_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_PropertyDefinition_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetDescription(self, *args)


    def HasDescription(self, *args):
        """
        * Returns True if optional field Description is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_PropertyDefinition_HasDescription(self, *args)


    def Definition(self, *args):
        """
        * Returns field Definition

        :rtype: StepRepr_CharacterizedDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinition_Definition(self, *args)


    def SetDefinition(self, *args):
        """
        * Set field Definition

        :param Definition:
        :type Definition: StepRepr_CharacterizedDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinition_SetDefinition(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_PropertyDefinition(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinition
StepRepr_PropertyDefinition.Init = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_Init, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.Name = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_Name, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.SetName = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_SetName, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.Description = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_Description, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.SetDescription = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_SetDescription, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.HasDescription = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_HasDescription, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.Definition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_Definition, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition.SetDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinition_SetDefinition, None, StepRepr_PropertyDefinition)
StepRepr_PropertyDefinition_swigregister = _StepRepr.StepRepr_PropertyDefinition_swigregister
StepRepr_PropertyDefinition_swigregister(StepRepr_PropertyDefinition)

class Handle_StepRepr_PropertyDefinition(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_PropertyDefinition_swiginit(self, _StepRepr.new_Handle_StepRepr_PropertyDefinition(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_PropertyDefinition_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_PropertyDefinition
Handle_StepRepr_PropertyDefinition.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinition_Nullify, None, Handle_StepRepr_PropertyDefinition)
Handle_StepRepr_PropertyDefinition.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinition_IsNull, None, Handle_StepRepr_PropertyDefinition)
Handle_StepRepr_PropertyDefinition.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinition_GetObject, None, Handle_StepRepr_PropertyDefinition)
Handle_StepRepr_PropertyDefinition_swigregister = _StepRepr.Handle_StepRepr_PropertyDefinition_swigregister
Handle_StepRepr_PropertyDefinition_swigregister(Handle_StepRepr_PropertyDefinition)

def Handle_StepRepr_PropertyDefinition_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_PropertyDefinition_DownCast(AnObject)
Handle_StepRepr_PropertyDefinition_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinition_DownCast

class StepRepr_PropertyDefinitionRelationship(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_PropertyDefinitionRelationship_swiginit(self, _StepRepr.new_StepRepr_PropertyDefinitionRelationship(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aRelatingPropertyDefinition:
        :type aRelatingPropertyDefinition: Handle_StepRepr_PropertyDefinition &
        :param aRelatedPropertyDefinition:
        :type aRelatedPropertyDefinition: Handle_StepRepr_PropertyDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Init(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetDescription(self, *args)


    def RelatingPropertyDefinition(self, *args):
        """
        * Returns field RelatingPropertyDefinition

        :rtype: Handle_StepRepr_PropertyDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_RelatingPropertyDefinition(self, *args)


    def SetRelatingPropertyDefinition(self, *args):
        """
        * Set field RelatingPropertyDefinition

        :param RelatingPropertyDefinition:
        :type RelatingPropertyDefinition: Handle_StepRepr_PropertyDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatingPropertyDefinition(self, *args)


    def RelatedPropertyDefinition(self, *args):
        """
        * Returns field RelatedPropertyDefinition

        :rtype: Handle_StepRepr_PropertyDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_RelatedPropertyDefinition(self, *args)


    def SetRelatedPropertyDefinition(self, *args):
        """
        * Set field RelatedPropertyDefinition

        :param RelatedPropertyDefinition:
        :type RelatedPropertyDefinition: Handle_StepRepr_PropertyDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatedPropertyDefinition(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_PropertyDefinitionRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinitionRelationship
StepRepr_PropertyDefinitionRelationship.Init = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_Init, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.Name = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_Name, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.SetName = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_SetName, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.Description = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_Description, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.SetDescription = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_SetDescription, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.RelatingPropertyDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_RelatingPropertyDefinition, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.SetRelatingPropertyDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatingPropertyDefinition, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.RelatedPropertyDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_RelatedPropertyDefinition, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship.SetRelatedPropertyDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRelationship_SetRelatedPropertyDefinition, None, StepRepr_PropertyDefinitionRelationship)
StepRepr_PropertyDefinitionRelationship_swigregister = _StepRepr.StepRepr_PropertyDefinitionRelationship_swigregister
StepRepr_PropertyDefinitionRelationship_swigregister(StepRepr_PropertyDefinitionRelationship)

class Handle_StepRepr_PropertyDefinitionRelationship(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_PropertyDefinitionRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_PropertyDefinitionRelationship
Handle_StepRepr_PropertyDefinitionRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_Nullify, None, Handle_StepRepr_PropertyDefinitionRelationship)
Handle_StepRepr_PropertyDefinitionRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_IsNull, None, Handle_StepRepr_PropertyDefinitionRelationship)
Handle_StepRepr_PropertyDefinitionRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_GetObject, None, Handle_StepRepr_PropertyDefinitionRelationship)
Handle_StepRepr_PropertyDefinitionRelationship_swigregister = _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_swigregister
Handle_StepRepr_PropertyDefinitionRelationship_swigregister(Handle_StepRepr_PropertyDefinitionRelationship)

def Handle_StepRepr_PropertyDefinitionRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_DownCast(AnObject)
Handle_StepRepr_PropertyDefinitionRelationship_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinitionRelationship_DownCast

class StepRepr_PropertyDefinitionRepresentation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_PropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_StepRepr_PropertyDefinitionRepresentation(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aDefinition:
        :type aDefinition: StepRepr_RepresentedDefinition &
        :param aUsedRepresentation:
        :type aUsedRepresentation: Handle_StepRepr_Representation &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_Init(self, *args)


    def Definition(self, *args):
        """
        * Returns field Definition

        :rtype: StepRepr_RepresentedDefinition

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_Definition(self, *args)


    def SetDefinition(self, *args):
        """
        * Set field Definition

        :param Definition:
        :type Definition: StepRepr_RepresentedDefinition &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_SetDefinition(self, *args)


    def UsedRepresentation(self, *args):
        """
        * Returns field UsedRepresentation

        :rtype: Handle_StepRepr_Representation

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_UsedRepresentation(self, *args)


    def SetUsedRepresentation(self, *args):
        """
        * Set field UsedRepresentation

        :param UsedRepresentation:
        :type UsedRepresentation: Handle_StepRepr_Representation &
        :rtype: None

        """
        return _StepRepr.StepRepr_PropertyDefinitionRepresentation_SetUsedRepresentation(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_PropertyDefinitionRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_PropertyDefinitionRepresentation
StepRepr_PropertyDefinitionRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRepresentation_Init, None, StepRepr_PropertyDefinitionRepresentation)
StepRepr_PropertyDefinitionRepresentation.Definition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRepresentation_Definition, None, StepRepr_PropertyDefinitionRepresentation)
StepRepr_PropertyDefinitionRepresentation.SetDefinition = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRepresentation_SetDefinition, None, StepRepr_PropertyDefinitionRepresentation)
StepRepr_PropertyDefinitionRepresentation.UsedRepresentation = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRepresentation_UsedRepresentation, None, StepRepr_PropertyDefinitionRepresentation)
StepRepr_PropertyDefinitionRepresentation.SetUsedRepresentation = new_instancemethod(_StepRepr.StepRepr_PropertyDefinitionRepresentation_SetUsedRepresentation, None, StepRepr_PropertyDefinitionRepresentation)
StepRepr_PropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_PropertyDefinitionRepresentation_swigregister
StepRepr_PropertyDefinitionRepresentation_swigregister(StepRepr_PropertyDefinitionRepresentation)

class Handle_StepRepr_PropertyDefinitionRepresentation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_PropertyDefinitionRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_PropertyDefinitionRepresentation
Handle_StepRepr_PropertyDefinitionRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_Nullify, None, Handle_StepRepr_PropertyDefinitionRepresentation)
Handle_StepRepr_PropertyDefinitionRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_IsNull, None, Handle_StepRepr_PropertyDefinitionRepresentation)
Handle_StepRepr_PropertyDefinitionRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_GetObject, None, Handle_StepRepr_PropertyDefinitionRepresentation)
Handle_StepRepr_PropertyDefinitionRepresentation_swigregister = _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_swigregister
Handle_StepRepr_PropertyDefinitionRepresentation_swigregister(Handle_StepRepr_PropertyDefinitionRepresentation)

def Handle_StepRepr_PropertyDefinitionRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_DownCast(AnObject)
Handle_StepRepr_PropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_PropertyDefinitionRepresentation_DownCast

class StepRepr_Representation(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Representation

        :rtype: None

        """
        _StepRepr.StepRepr_Representation_swiginit(self, _StepRepr.new_StepRepr_Representation(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aItems:
        :type aItems: Handle_StepRepr_HArray1OfRepresentationItem &
        :param aContextOfItems:
        :type aContextOfItems: Handle_StepRepr_RepresentationContext &
        :rtype: void

        """
        return _StepRepr.StepRepr_Representation_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_Representation_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_Representation_Name(self, *args)


    def SetItems(self, *args):
        """
        :param aItems:
        :type aItems: Handle_StepRepr_HArray1OfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_Representation_SetItems(self, *args)


    def Items(self, *args):
        """
        :rtype: Handle_StepRepr_HArray1OfRepresentationItem

        """
        return _StepRepr.StepRepr_Representation_Items(self, *args)


    def ItemsValue(self, *args):
        """
        :param num:
        :type num: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_Representation_ItemsValue(self, *args)


    def NbItems(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_Representation_NbItems(self, *args)


    def SetContextOfItems(self, *args):
        """
        :param aContextOfItems:
        :type aContextOfItems: Handle_StepRepr_RepresentationContext &
        :rtype: None

        """
        return _StepRepr.StepRepr_Representation_SetContextOfItems(self, *args)


    def ContextOfItems(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationContext

        """
        return _StepRepr.StepRepr_Representation_ContextOfItems(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_Representation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_Representation
StepRepr_Representation.Init = new_instancemethod(_StepRepr.StepRepr_Representation_Init, None, StepRepr_Representation)
StepRepr_Representation.SetName = new_instancemethod(_StepRepr.StepRepr_Representation_SetName, None, StepRepr_Representation)
StepRepr_Representation.Name = new_instancemethod(_StepRepr.StepRepr_Representation_Name, None, StepRepr_Representation)
StepRepr_Representation.SetItems = new_instancemethod(_StepRepr.StepRepr_Representation_SetItems, None, StepRepr_Representation)
StepRepr_Representation.Items = new_instancemethod(_StepRepr.StepRepr_Representation_Items, None, StepRepr_Representation)
StepRepr_Representation.ItemsValue = new_instancemethod(_StepRepr.StepRepr_Representation_ItemsValue, None, StepRepr_Representation)
StepRepr_Representation.NbItems = new_instancemethod(_StepRepr.StepRepr_Representation_NbItems, None, StepRepr_Representation)
StepRepr_Representation.SetContextOfItems = new_instancemethod(_StepRepr.StepRepr_Representation_SetContextOfItems, None, StepRepr_Representation)
StepRepr_Representation.ContextOfItems = new_instancemethod(_StepRepr.StepRepr_Representation_ContextOfItems, None, StepRepr_Representation)
StepRepr_Representation_swigregister = _StepRepr.StepRepr_Representation_swigregister
StepRepr_Representation_swigregister(StepRepr_Representation)

class Handle_StepRepr_Representation(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_Representation_swiginit(self, _StepRepr.new_Handle_StepRepr_Representation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_Representation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_Representation
Handle_StepRepr_Representation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_Representation_Nullify, None, Handle_StepRepr_Representation)
Handle_StepRepr_Representation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_Representation_IsNull, None, Handle_StepRepr_Representation)
Handle_StepRepr_Representation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_Representation_GetObject, None, Handle_StepRepr_Representation)
Handle_StepRepr_Representation_swigregister = _StepRepr.Handle_StepRepr_Representation_swigregister
Handle_StepRepr_Representation_swigregister(Handle_StepRepr_Representation)

def Handle_StepRepr_Representation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_Representation_DownCast(AnObject)
Handle_StepRepr_Representation_DownCast = _StepRepr.Handle_StepRepr_Representation_DownCast

class StepRepr_RepresentationContext(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RepresentationContext

        :rtype: None

        """
        _StepRepr.StepRepr_RepresentationContext_swiginit(self, _StepRepr.new_StepRepr_RepresentationContext(*args))

    def Init(self, *args):
        """
        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :rtype: void

        """
        return _StepRepr.StepRepr_RepresentationContext_Init(self, *args)


    def SetContextIdentifier(self, *args):
        """
        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationContext_SetContextIdentifier(self, *args)


    def ContextIdentifier(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_RepresentationContext_ContextIdentifier(self, *args)


    def SetContextType(self, *args):
        """
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationContext_SetContextType(self, *args)


    def ContextType(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_RepresentationContext_ContextType(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_RepresentationContext(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationContext
StepRepr_RepresentationContext.Init = new_instancemethod(_StepRepr.StepRepr_RepresentationContext_Init, None, StepRepr_RepresentationContext)
StepRepr_RepresentationContext.SetContextIdentifier = new_instancemethod(_StepRepr.StepRepr_RepresentationContext_SetContextIdentifier, None, StepRepr_RepresentationContext)
StepRepr_RepresentationContext.ContextIdentifier = new_instancemethod(_StepRepr.StepRepr_RepresentationContext_ContextIdentifier, None, StepRepr_RepresentationContext)
StepRepr_RepresentationContext.SetContextType = new_instancemethod(_StepRepr.StepRepr_RepresentationContext_SetContextType, None, StepRepr_RepresentationContext)
StepRepr_RepresentationContext.ContextType = new_instancemethod(_StepRepr.StepRepr_RepresentationContext_ContextType, None, StepRepr_RepresentationContext)
StepRepr_RepresentationContext_swigregister = _StepRepr.StepRepr_RepresentationContext_swigregister
StepRepr_RepresentationContext_swigregister(StepRepr_RepresentationContext)

class Handle_StepRepr_RepresentationContext(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_RepresentationContext_swiginit(self, _StepRepr.new_Handle_StepRepr_RepresentationContext(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_RepresentationContext_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_RepresentationContext
Handle_StepRepr_RepresentationContext.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationContext_Nullify, None, Handle_StepRepr_RepresentationContext)
Handle_StepRepr_RepresentationContext.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationContext_IsNull, None, Handle_StepRepr_RepresentationContext)
Handle_StepRepr_RepresentationContext.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationContext_GetObject, None, Handle_StepRepr_RepresentationContext)
Handle_StepRepr_RepresentationContext_swigregister = _StepRepr.Handle_StepRepr_RepresentationContext_swigregister
Handle_StepRepr_RepresentationContext_swigregister(Handle_StepRepr_RepresentationContext)

def Handle_StepRepr_RepresentationContext_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_RepresentationContext_DownCast(AnObject)
Handle_StepRepr_RepresentationContext_DownCast = _StepRepr.Handle_StepRepr_RepresentationContext_DownCast

class StepRepr_RepresentationItem(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RepresentationItem

        :rtype: None

        """
        _StepRepr.StepRepr_RepresentationItem_swiginit(self, _StepRepr.new_StepRepr_RepresentationItem(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: void

        """
        return _StepRepr.StepRepr_RepresentationItem_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationItem_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_RepresentationItem_Name(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_RepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationItem
StepRepr_RepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_RepresentationItem_Init, None, StepRepr_RepresentationItem)
StepRepr_RepresentationItem.SetName = new_instancemethod(_StepRepr.StepRepr_RepresentationItem_SetName, None, StepRepr_RepresentationItem)
StepRepr_RepresentationItem.Name = new_instancemethod(_StepRepr.StepRepr_RepresentationItem_Name, None, StepRepr_RepresentationItem)
StepRepr_RepresentationItem_swigregister = _StepRepr.StepRepr_RepresentationItem_swigregister
StepRepr_RepresentationItem_swigregister(StepRepr_RepresentationItem)

class Handle_StepRepr_RepresentationItem(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_RepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_RepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_RepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_RepresentationItem
Handle_StepRepr_RepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationItem_Nullify, None, Handle_StepRepr_RepresentationItem)
Handle_StepRepr_RepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationItem_IsNull, None, Handle_StepRepr_RepresentationItem)
Handle_StepRepr_RepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationItem_GetObject, None, Handle_StepRepr_RepresentationItem)
Handle_StepRepr_RepresentationItem_swigregister = _StepRepr.Handle_StepRepr_RepresentationItem_swigregister
Handle_StepRepr_RepresentationItem_swigregister(Handle_StepRepr_RepresentationItem)

def Handle_StepRepr_RepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_RepresentationItem_DownCast(AnObject)
Handle_StepRepr_RepresentationItem_DownCast = _StepRepr.Handle_StepRepr_RepresentationItem_DownCast

class StepRepr_RepresentationMap(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RepresentationMap

        :rtype: None

        """
        _StepRepr.StepRepr_RepresentationMap_swiginit(self, _StepRepr.new_StepRepr_RepresentationMap(*args))

    def Init(self, *args):
        """
        :param aMappingOrigin:
        :type aMappingOrigin: Handle_StepRepr_RepresentationItem &
        :param aMappedRepresentation:
        :type aMappedRepresentation: Handle_StepRepr_Representation &
        :rtype: void

        """
        return _StepRepr.StepRepr_RepresentationMap_Init(self, *args)


    def SetMappingOrigin(self, *args):
        """
        :param aMappingOrigin:
        :type aMappingOrigin: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationMap_SetMappingOrigin(self, *args)


    def MappingOrigin(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_RepresentationMap_MappingOrigin(self, *args)


    def SetMappedRepresentation(self, *args):
        """
        :param aMappedRepresentation:
        :type aMappedRepresentation: Handle_StepRepr_Representation &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationMap_SetMappedRepresentation(self, *args)


    def MappedRepresentation(self, *args):
        """
        :rtype: Handle_StepRepr_Representation

        """
        return _StepRepr.StepRepr_RepresentationMap_MappedRepresentation(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_RepresentationMap(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationMap
StepRepr_RepresentationMap.Init = new_instancemethod(_StepRepr.StepRepr_RepresentationMap_Init, None, StepRepr_RepresentationMap)
StepRepr_RepresentationMap.SetMappingOrigin = new_instancemethod(_StepRepr.StepRepr_RepresentationMap_SetMappingOrigin, None, StepRepr_RepresentationMap)
StepRepr_RepresentationMap.MappingOrigin = new_instancemethod(_StepRepr.StepRepr_RepresentationMap_MappingOrigin, None, StepRepr_RepresentationMap)
StepRepr_RepresentationMap.SetMappedRepresentation = new_instancemethod(_StepRepr.StepRepr_RepresentationMap_SetMappedRepresentation, None, StepRepr_RepresentationMap)
StepRepr_RepresentationMap.MappedRepresentation = new_instancemethod(_StepRepr.StepRepr_RepresentationMap_MappedRepresentation, None, StepRepr_RepresentationMap)
StepRepr_RepresentationMap_swigregister = _StepRepr.StepRepr_RepresentationMap_swigregister
StepRepr_RepresentationMap_swigregister(StepRepr_RepresentationMap)

class Handle_StepRepr_RepresentationMap(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_RepresentationMap_swiginit(self, _StepRepr.new_Handle_StepRepr_RepresentationMap(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_RepresentationMap_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_RepresentationMap
Handle_StepRepr_RepresentationMap.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationMap_Nullify, None, Handle_StepRepr_RepresentationMap)
Handle_StepRepr_RepresentationMap.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationMap_IsNull, None, Handle_StepRepr_RepresentationMap)
Handle_StepRepr_RepresentationMap.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationMap_GetObject, None, Handle_StepRepr_RepresentationMap)
Handle_StepRepr_RepresentationMap_swigregister = _StepRepr.Handle_StepRepr_RepresentationMap_swigregister
Handle_StepRepr_RepresentationMap_swigregister(Handle_StepRepr_RepresentationMap)

def Handle_StepRepr_RepresentationMap_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_RepresentationMap_DownCast(AnObject)
Handle_StepRepr_RepresentationMap_DownCast = _StepRepr.Handle_StepRepr_RepresentationMap_DownCast

class StepRepr_RepresentationRelationship(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a RepresentationRelationship

        :rtype: None

        """
        _StepRepr.StepRepr_RepresentationRelationship_swiginit(self, _StepRepr.new_StepRepr_RepresentationRelationship(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aRep1:
        :type aRep1: Handle_StepRepr_Representation &
        :param aRep2:
        :type aRep2: Handle_StepRepr_Representation &
        :rtype: void

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Name(self, *args)


    def SetDescription(self, *args):
        """
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetDescription(self, *args)


    def Description(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Description(self, *args)


    def SetRep1(self, *args):
        """
        :param aRep1:
        :type aRep1: Handle_StepRepr_Representation &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetRep1(self, *args)


    def Rep1(self, *args):
        """
        :rtype: Handle_StepRepr_Representation

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Rep1(self, *args)


    def SetRep2(self, *args):
        """
        :param aRep2:
        :type aRep2: Handle_StepRepr_Representation &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationship_SetRep2(self, *args)


    def Rep2(self, *args):
        """
        :rtype: Handle_StepRepr_Representation

        """
        return _StepRepr.StepRepr_RepresentationRelationship_Rep2(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_RepresentationRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationRelationship
StepRepr_RepresentationRelationship.Init = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_Init, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.SetName = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_SetName, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.Name = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_Name, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.SetDescription = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_SetDescription, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.Description = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_Description, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.SetRep1 = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_SetRep1, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.Rep1 = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_Rep1, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.SetRep2 = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_SetRep2, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship.Rep2 = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationship_Rep2, None, StepRepr_RepresentationRelationship)
StepRepr_RepresentationRelationship_swigregister = _StepRepr.StepRepr_RepresentationRelationship_swigregister
StepRepr_RepresentationRelationship_swigregister(StepRepr_RepresentationRelationship)

class Handle_StepRepr_RepresentationRelationship(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_RepresentationRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_RepresentationRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_RepresentationRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_RepresentationRelationship
Handle_StepRepr_RepresentationRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationship_Nullify, None, Handle_StepRepr_RepresentationRelationship)
Handle_StepRepr_RepresentationRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationship_IsNull, None, Handle_StepRepr_RepresentationRelationship)
Handle_StepRepr_RepresentationRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationship_GetObject, None, Handle_StepRepr_RepresentationRelationship)
Handle_StepRepr_RepresentationRelationship_swigregister = _StepRepr.Handle_StepRepr_RepresentationRelationship_swigregister
Handle_StepRepr_RepresentationRelationship_swigregister(Handle_StepRepr_RepresentationRelationship)

def Handle_StepRepr_RepresentationRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_RepresentationRelationship_DownCast(AnObject)
Handle_StepRepr_RepresentationRelationship_DownCast = _StepRepr.Handle_StepRepr_RepresentationRelationship_DownCast

class StepRepr_RepresentedDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_RepresentedDefinition_swiginit(self, _StepRepr.new_StepRepr_RepresentedDefinition(*args))

    def CaseNum(self, *args):
        """
        * Recognizes a kind of RepresentedDefinition select type 1 -> GeneralProperty from StepBasic 2 -> PropertyDefinition from StepRepr 3 -> PropertyDefinitionRelationship from StepRepr 4 -> ShapeAspect from StepRepr 5 -> ShapeAspectRelationship from StepRepr 0 else

        :param ent:
        :type ent: Handle_Standard_Transient &
        :rtype: int

        """
        return _StepRepr.StepRepr_RepresentedDefinition_CaseNum(self, *args)


    def GeneralProperty(self, *args):
        """
        * Returns Value as GeneralProperty (or Null if another type)

        :rtype: Handle_StepBasic_GeneralProperty

        """
        return _StepRepr.StepRepr_RepresentedDefinition_GeneralProperty(self, *args)


    def PropertyDefinition(self, *args):
        """
        * Returns Value as PropertyDefinition (or Null if another type)

        :rtype: Handle_StepRepr_PropertyDefinition

        """
        return _StepRepr.StepRepr_RepresentedDefinition_PropertyDefinition(self, *args)


    def PropertyDefinitionRelationship(self, *args):
        """
        * Returns Value as PropertyDefinitionRelationship (or Null if another type)

        :rtype: Handle_StepRepr_PropertyDefinitionRelationship

        """
        return _StepRepr.StepRepr_RepresentedDefinition_PropertyDefinitionRelationship(self, *args)


    def ShapeAspect(self, *args):
        """
        * Returns Value as ShapeAspect (or Null if another type)

        :rtype: Handle_StepRepr_ShapeAspect

        """
        return _StepRepr.StepRepr_RepresentedDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args):
        """
        * Returns Value as ShapeAspectRelationship (or Null if another type)

        :rtype: Handle_StepRepr_ShapeAspectRelationship

        """
        return _StepRepr.StepRepr_RepresentedDefinition_ShapeAspectRelationship(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentedDefinition
StepRepr_RepresentedDefinition.CaseNum = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_CaseNum, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition.GeneralProperty = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_GeneralProperty, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition.PropertyDefinition = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_PropertyDefinition, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition.PropertyDefinitionRelationship = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_PropertyDefinitionRelationship, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition.ShapeAspect = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_ShapeAspect, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition.ShapeAspectRelationship = new_instancemethod(_StepRepr.StepRepr_RepresentedDefinition_ShapeAspectRelationship, None, StepRepr_RepresentedDefinition)
StepRepr_RepresentedDefinition_swigregister = _StepRepr.StepRepr_RepresentedDefinition_swigregister
StepRepr_RepresentedDefinition_swigregister(StepRepr_RepresentedDefinition)

class StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_StepRepr_MaterialPropertyRepresentation &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _StepRepr.StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation(*args))

    def Value(self, *args):
        """
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_Value(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation
StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_Value, None, StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister
StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister(StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)

class Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_Nullify, None, Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_IsNull, None, Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_GetObject, None, Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_swigregister(Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation)

def Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_DownCast(AnObject)
Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfMaterialPropertyRepresentation_DownCast

class StepRepr_SequenceNodeOfSequenceOfRepresentationItem(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_StepRepr_RepresentationItem &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _StepRepr.StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_SequenceNodeOfSequenceOfRepresentationItem(*args))

    def Value(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_SequenceNodeOfSequenceOfRepresentationItem_Value(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceNodeOfSequenceOfRepresentationItem
StepRepr_SequenceNodeOfSequenceOfRepresentationItem.Value = new_instancemethod(_StepRepr.StepRepr_SequenceNodeOfSequenceOfRepresentationItem_Value, None, StepRepr_SequenceNodeOfSequenceOfRepresentationItem)
StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister = _StepRepr.StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister
StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister(StepRepr_SequenceNodeOfSequenceOfRepresentationItem)

class Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_Nullify, None, Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem)
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_IsNull, None, Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem)
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_GetObject, None, Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem)
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_swigregister(Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem)

def Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_DownCast(AnObject)
Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_SequenceNodeOfSequenceOfRepresentationItem_DownCast

class StepRepr_SequenceOfMaterialPropertyRepresentation(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_SequenceOfMaterialPropertyRepresentation(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: StepRepr_SequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: StepRepr_SequenceOfMaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param S:
        :type S: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param S:
        :type S: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: StepRepr_SequenceOfMaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_StepRepr_MaterialPropertyRepresentation &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_MaterialPropertyRepresentation

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Remove(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceOfMaterialPropertyRepresentation
StepRepr_SequenceOfMaterialPropertyRepresentation.Clear = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Clear, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Assign = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Assign, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Set = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Set, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Append = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Append, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Prepend = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Prepend, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.InsertBefore = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertBefore, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.InsertAfter = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_InsertAfter, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.First = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_First, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Last = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Last, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Split = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Split, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Value = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Value, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.SetValue = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_SetValue, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.ChangeValue = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_ChangeValue, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation.Remove = new_instancemethod(_StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_Remove, None, StepRepr_SequenceOfMaterialPropertyRepresentation)
StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister
StepRepr_SequenceOfMaterialPropertyRepresentation_swigregister(StepRepr_SequenceOfMaterialPropertyRepresentation)

class StepRepr_SequenceOfRepresentationItem(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_SequenceOfRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_SequenceOfRepresentationItem(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: StepRepr_SequenceOfRepresentationItem &
        :rtype: StepRepr_SequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: StepRepr_SequenceOfRepresentationItem &
        :rtype: StepRepr_SequenceOfRepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param S:
        :type S: StepRepr_SequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param S:
        :type S: StepRepr_SequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: StepRepr_SequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_StepRepr_RepresentationItem &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: StepRepr_SequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: StepRepr_SequenceOfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _StepRepr.StepRepr_SequenceOfRepresentationItem_Remove(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_SequenceOfRepresentationItem
StepRepr_SequenceOfRepresentationItem.Clear = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Clear, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Assign = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Assign, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Set = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Set, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Append = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Append, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Prepend = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Prepend, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.InsertBefore = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_InsertBefore, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.InsertAfter = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_InsertAfter, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.First = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_First, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Last = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Last, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Split = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Split, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Value = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Value, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.SetValue = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_SetValue, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.ChangeValue = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_ChangeValue, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem.Remove = new_instancemethod(_StepRepr.StepRepr_SequenceOfRepresentationItem_Remove, None, StepRepr_SequenceOfRepresentationItem)
StepRepr_SequenceOfRepresentationItem_swigregister = _StepRepr.StepRepr_SequenceOfRepresentationItem_swigregister
StepRepr_SequenceOfRepresentationItem_swigregister(StepRepr_SequenceOfRepresentationItem)

class StepRepr_ShapeAspect(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ShapeAspect

        :rtype: None

        """
        _StepRepr.StepRepr_ShapeAspect_swiginit(self, _StepRepr.new_StepRepr_ShapeAspect(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aOfShape:
        :type aOfShape: Handle_StepRepr_ProductDefinitionShape &
        :param aProductDefinitional:
        :type aProductDefinitional: StepData_Logical
        :rtype: void

        """
        return _StepRepr.StepRepr_ShapeAspect_Init(self, *args)


    def SetName(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetName(self, *args)


    def Name(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ShapeAspect_Name(self, *args)


    def SetDescription(self, *args):
        """
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetDescription(self, *args)


    def Description(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ShapeAspect_Description(self, *args)


    def SetOfShape(self, *args):
        """
        :param aOfShape:
        :type aOfShape: Handle_StepRepr_ProductDefinitionShape &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetOfShape(self, *args)


    def OfShape(self, *args):
        """
        :rtype: Handle_StepRepr_ProductDefinitionShape

        """
        return _StepRepr.StepRepr_ShapeAspect_OfShape(self, *args)


    def SetProductDefinitional(self, *args):
        """
        :param aProductDefinitional:
        :type aProductDefinitional: StepData_Logical
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspect_SetProductDefinitional(self, *args)


    def ProductDefinitional(self, *args):
        """
        :rtype: StepData_Logical

        """
        return _StepRepr.StepRepr_ShapeAspect_ProductDefinitional(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeAspect(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspect
StepRepr_ShapeAspect.Init = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_Init, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.SetName = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_SetName, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.Name = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_Name, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.SetDescription = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_SetDescription, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.Description = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_Description, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.SetOfShape = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_SetOfShape, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.OfShape = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_OfShape, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.SetProductDefinitional = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_SetProductDefinitional, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect.ProductDefinitional = new_instancemethod(_StepRepr.StepRepr_ShapeAspect_ProductDefinitional, None, StepRepr_ShapeAspect)
StepRepr_ShapeAspect_swigregister = _StepRepr.StepRepr_ShapeAspect_swigregister
StepRepr_ShapeAspect_swigregister(StepRepr_ShapeAspect)

class Handle_StepRepr_ShapeAspect(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeAspect_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeAspect(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeAspect_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeAspect
Handle_StepRepr_ShapeAspect.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspect_Nullify, None, Handle_StepRepr_ShapeAspect)
Handle_StepRepr_ShapeAspect.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspect_IsNull, None, Handle_StepRepr_ShapeAspect)
Handle_StepRepr_ShapeAspect.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspect_GetObject, None, Handle_StepRepr_ShapeAspect)
Handle_StepRepr_ShapeAspect_swigregister = _StepRepr.Handle_StepRepr_ShapeAspect_swigregister
Handle_StepRepr_ShapeAspect_swigregister(Handle_StepRepr_ShapeAspect)

def Handle_StepRepr_ShapeAspect_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeAspect_DownCast(AnObject)
Handle_StepRepr_ShapeAspect_DownCast = _StepRepr.Handle_StepRepr_ShapeAspect_DownCast

class StepRepr_ShapeAspectRelationship(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ShapeAspectRelationship_swiginit(self, _StepRepr.new_StepRepr_ShapeAspectRelationship(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param hasDescription:
        :type hasDescription: bool
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aRelatingShapeAspect:
        :type aRelatingShapeAspect: Handle_StepRepr_ShapeAspect &
        :param aRelatedShapeAspect:
        :type aRelatedShapeAspect: Handle_StepRepr_ShapeAspect &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Init(self, *args)


    def Name(self, *args):
        """
        * Returns field Name

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Name(self, *args)


    def SetName(self, *args):
        """
        * Set field Name

        :param Name:
        :type Name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetName(self, *args)


    def Description(self, *args):
        """
        * Returns field Description

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_Description(self, *args)


    def SetDescription(self, *args):
        """
        * Set field Description

        :param Description:
        :type Description: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetDescription(self, *args)


    def HasDescription(self, *args):
        """
        * Returns True if optional field Description is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_HasDescription(self, *args)


    def RelatingShapeAspect(self, *args):
        """
        * Returns field RelatingShapeAspect

        :rtype: Handle_StepRepr_ShapeAspect

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_RelatingShapeAspect(self, *args)


    def SetRelatingShapeAspect(self, *args):
        """
        * Set field RelatingShapeAspect

        :param RelatingShapeAspect:
        :type RelatingShapeAspect: Handle_StepRepr_ShapeAspect &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetRelatingShapeAspect(self, *args)


    def RelatedShapeAspect(self, *args):
        """
        * Returns field RelatedShapeAspect

        :rtype: Handle_StepRepr_ShapeAspect

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_RelatedShapeAspect(self, *args)


    def SetRelatedShapeAspect(self, *args):
        """
        * Set field RelatedShapeAspect

        :param RelatedShapeAspect:
        :type RelatedShapeAspect: Handle_StepRepr_ShapeAspect &
        :rtype: None

        """
        return _StepRepr.StepRepr_ShapeAspectRelationship_SetRelatedShapeAspect(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeAspectRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectRelationship
StepRepr_ShapeAspectRelationship.Init = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_Init, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.Name = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_Name, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.SetName = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_SetName, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.Description = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_Description, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.SetDescription = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_SetDescription, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.HasDescription = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_HasDescription, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.RelatingShapeAspect = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_RelatingShapeAspect, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.SetRelatingShapeAspect = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_SetRelatingShapeAspect, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.RelatedShapeAspect = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_RelatedShapeAspect, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship.SetRelatedShapeAspect = new_instancemethod(_StepRepr.StepRepr_ShapeAspectRelationship_SetRelatedShapeAspect, None, StepRepr_ShapeAspectRelationship)
StepRepr_ShapeAspectRelationship_swigregister = _StepRepr.StepRepr_ShapeAspectRelationship_swigregister
StepRepr_ShapeAspectRelationship_swigregister(StepRepr_ShapeAspectRelationship)

class Handle_StepRepr_ShapeAspectRelationship(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeAspectRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeAspectRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeAspectRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeAspectRelationship
Handle_StepRepr_ShapeAspectRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectRelationship_Nullify, None, Handle_StepRepr_ShapeAspectRelationship)
Handle_StepRepr_ShapeAspectRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectRelationship_IsNull, None, Handle_StepRepr_ShapeAspectRelationship)
Handle_StepRepr_ShapeAspectRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectRelationship_GetObject, None, Handle_StepRepr_ShapeAspectRelationship)
Handle_StepRepr_ShapeAspectRelationship_swigregister = _StepRepr.Handle_StepRepr_ShapeAspectRelationship_swigregister
Handle_StepRepr_ShapeAspectRelationship_swigregister(Handle_StepRepr_ShapeAspectRelationship)

def Handle_StepRepr_ShapeAspectRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeAspectRelationship_DownCast(AnObject)
Handle_StepRepr_ShapeAspectRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectRelationship_DownCast

class StepRepr_ShapeDefinition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ShapeDefinition SelectType

        :rtype: None

        """
        _StepRepr.StepRepr_ShapeDefinition_swiginit(self, _StepRepr.new_StepRepr_ShapeDefinition(*args))

    def CaseNum(self, *args):
        """
        * Recognizes a ShapeDefinition Kind Entity that is : 1 -> ProductDefinitionShape 2 -> ShapeAspect 3 -> ShapeAspectRelationship 0 else

        :param ent:
        :type ent: Handle_Standard_Transient &
        :rtype: int

        """
        return _StepRepr.StepRepr_ShapeDefinition_CaseNum(self, *args)


    def ProductDefinitionShape(self, *args):
        """
        * returns Value as a ProductDefinitionShape (Null if another type)

        :rtype: Handle_StepRepr_ProductDefinitionShape

        """
        return _StepRepr.StepRepr_ShapeDefinition_ProductDefinitionShape(self, *args)


    def ShapeAspect(self, *args):
        """
        * returns Value as a ShapeAspect (Null if another type)

        :rtype: Handle_StepRepr_ShapeAspect

        """
        return _StepRepr.StepRepr_ShapeDefinition_ShapeAspect(self, *args)


    def ShapeAspectRelationship(self, *args):
        """
        * returns Value as a ShapeAspectRelationship (Null if another type)

        :rtype: Handle_StepRepr_ShapeAspectRelationship

        """
        return _StepRepr.StepRepr_ShapeDefinition_ShapeAspectRelationship(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeDefinition
StepRepr_ShapeDefinition.CaseNum = new_instancemethod(_StepRepr.StepRepr_ShapeDefinition_CaseNum, None, StepRepr_ShapeDefinition)
StepRepr_ShapeDefinition.ProductDefinitionShape = new_instancemethod(_StepRepr.StepRepr_ShapeDefinition_ProductDefinitionShape, None, StepRepr_ShapeDefinition)
StepRepr_ShapeDefinition.ShapeAspect = new_instancemethod(_StepRepr.StepRepr_ShapeDefinition_ShapeAspect, None, StepRepr_ShapeDefinition)
StepRepr_ShapeDefinition.ShapeAspectRelationship = new_instancemethod(_StepRepr.StepRepr_ShapeDefinition_ShapeAspectRelationship, None, StepRepr_ShapeDefinition)
StepRepr_ShapeDefinition_swigregister = _StepRepr.StepRepr_ShapeDefinition_swigregister
StepRepr_ShapeDefinition_swigregister(StepRepr_ShapeDefinition)

class StepRepr_SuppliedPartRelationship(OCC.StepBasic.StepBasic_ProductDefinitionRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_SuppliedPartRelationship_swiginit(self, _StepRepr.new_StepRepr_SuppliedPartRelationship(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_SuppliedPartRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_SuppliedPartRelationship
StepRepr_SuppliedPartRelationship_swigregister = _StepRepr.StepRepr_SuppliedPartRelationship_swigregister
StepRepr_SuppliedPartRelationship_swigregister(StepRepr_SuppliedPartRelationship)

class Handle_StepRepr_SuppliedPartRelationship(OCC.StepBasic.Handle_StepBasic_ProductDefinitionRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_SuppliedPartRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_SuppliedPartRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_SuppliedPartRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_SuppliedPartRelationship
Handle_StepRepr_SuppliedPartRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_SuppliedPartRelationship_Nullify, None, Handle_StepRepr_SuppliedPartRelationship)
Handle_StepRepr_SuppliedPartRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_SuppliedPartRelationship_IsNull, None, Handle_StepRepr_SuppliedPartRelationship)
Handle_StepRepr_SuppliedPartRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_SuppliedPartRelationship_GetObject, None, Handle_StepRepr_SuppliedPartRelationship)
Handle_StepRepr_SuppliedPartRelationship_swigregister = _StepRepr.Handle_StepRepr_SuppliedPartRelationship_swigregister
Handle_StepRepr_SuppliedPartRelationship_swigregister(Handle_StepRepr_SuppliedPartRelationship)

def Handle_StepRepr_SuppliedPartRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_SuppliedPartRelationship_DownCast(AnObject)
Handle_StepRepr_SuppliedPartRelationship_DownCast = _StepRepr.Handle_StepRepr_SuppliedPartRelationship_DownCast

class StepRepr_Transformation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a Transformation SelectType

        :rtype: None

        """
        _StepRepr.StepRepr_Transformation_swiginit(self, _StepRepr.new_StepRepr_Transformation(*args))

    def CaseNum(self, *args):
        """
        * Recognizes a Transformation Kind Entity that is : 1 -> ItemDefinedTransformation 2 -> FunctionallyDefinedTransformation 0 else

        :param ent:
        :type ent: Handle_Standard_Transient &
        :rtype: int

        """
        return _StepRepr.StepRepr_Transformation_CaseNum(self, *args)


    def ItemDefinedTransformation(self, *args):
        """
        * returns Value as a ItemDefinedTransformation (Null if another type)

        :rtype: Handle_StepRepr_ItemDefinedTransformation

        """
        return _StepRepr.StepRepr_Transformation_ItemDefinedTransformation(self, *args)


    def FunctionallyDefinedTransformation(self, *args):
        """
        * returns Value as a FunctionallyDefinedTransformation (Null if another type)

        :rtype: Handle_StepRepr_FunctionallyDefinedTransformation

        """
        return _StepRepr.StepRepr_Transformation_FunctionallyDefinedTransformation(self, *args)

    __swig_destroy__ = _StepRepr.delete_StepRepr_Transformation
StepRepr_Transformation.CaseNum = new_instancemethod(_StepRepr.StepRepr_Transformation_CaseNum, None, StepRepr_Transformation)
StepRepr_Transformation.ItemDefinedTransformation = new_instancemethod(_StepRepr.StepRepr_Transformation_ItemDefinedTransformation, None, StepRepr_Transformation)
StepRepr_Transformation.FunctionallyDefinedTransformation = new_instancemethod(_StepRepr.StepRepr_Transformation_FunctionallyDefinedTransformation, None, StepRepr_Transformation)
StepRepr_Transformation_swigregister = _StepRepr.StepRepr_Transformation_swigregister
StepRepr_Transformation_swigregister(StepRepr_Transformation)

class StepRepr_AssemblyComponentUsage(StepRepr_ProductDefinitionUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_AssemblyComponentUsage_swiginit(self, _StepRepr.new_StepRepr_AssemblyComponentUsage(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aProductDefinitionRelationship_Id:
        :type aProductDefinitionRelationship_Id: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_Name:
        :type aProductDefinitionRelationship_Name: Handle_TCollection_HAsciiString &
        :param hasProductDefinitionRelationship_Description:
        :type hasProductDefinitionRelationship_Description: bool
        :param aProductDefinitionRelationship_Description:
        :type aProductDefinitionRelationship_Description: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_RelatingProductDefinition:
        :type aProductDefinitionRelationship_RelatingProductDefinition: Handle_StepBasic_ProductDefinition &
        :param aProductDefinitionRelationship_RelatedProductDefinition:
        :type aProductDefinitionRelationship_RelatedProductDefinition: Handle_StepBasic_ProductDefinition &
        :param hasReferenceDesignator:
        :type hasReferenceDesignator: bool
        :param aReferenceDesignator:
        :type aReferenceDesignator: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_Init(self, *args)


    def ReferenceDesignator(self, *args):
        """
        * Returns field ReferenceDesignator

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_ReferenceDesignator(self, *args)


    def SetReferenceDesignator(self, *args):
        """
        * Set field ReferenceDesignator

        :param ReferenceDesignator:
        :type ReferenceDesignator: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_SetReferenceDesignator(self, *args)


    def HasReferenceDesignator(self, *args):
        """
        * Returns True if optional field ReferenceDesignator is defined

        :rtype: bool

        """
        return _StepRepr.StepRepr_AssemblyComponentUsage_HasReferenceDesignator(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_AssemblyComponentUsage(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_AssemblyComponentUsage
StepRepr_AssemblyComponentUsage.Init = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsage_Init, None, StepRepr_AssemblyComponentUsage)
StepRepr_AssemblyComponentUsage.ReferenceDesignator = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsage_ReferenceDesignator, None, StepRepr_AssemblyComponentUsage)
StepRepr_AssemblyComponentUsage.SetReferenceDesignator = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsage_SetReferenceDesignator, None, StepRepr_AssemblyComponentUsage)
StepRepr_AssemblyComponentUsage.HasReferenceDesignator = new_instancemethod(_StepRepr.StepRepr_AssemblyComponentUsage_HasReferenceDesignator, None, StepRepr_AssemblyComponentUsage)
StepRepr_AssemblyComponentUsage_swigregister = _StepRepr.StepRepr_AssemblyComponentUsage_swigregister
StepRepr_AssemblyComponentUsage_swigregister(StepRepr_AssemblyComponentUsage)

class Handle_StepRepr_AssemblyComponentUsage(Handle_StepRepr_ProductDefinitionUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_AssemblyComponentUsage_swiginit(self, _StepRepr.new_Handle_StepRepr_AssemblyComponentUsage(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsage_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_AssemblyComponentUsage
Handle_StepRepr_AssemblyComponentUsage.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsage_Nullify, None, Handle_StepRepr_AssemblyComponentUsage)
Handle_StepRepr_AssemblyComponentUsage.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsage_IsNull, None, Handle_StepRepr_AssemblyComponentUsage)
Handle_StepRepr_AssemblyComponentUsage.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_AssemblyComponentUsage_GetObject, None, Handle_StepRepr_AssemblyComponentUsage)
Handle_StepRepr_AssemblyComponentUsage_swigregister = _StepRepr.Handle_StepRepr_AssemblyComponentUsage_swigregister
Handle_StepRepr_AssemblyComponentUsage_swigregister(Handle_StepRepr_AssemblyComponentUsage)

def Handle_StepRepr_AssemblyComponentUsage_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_AssemblyComponentUsage_DownCast(AnObject)
Handle_StepRepr_AssemblyComponentUsage_DownCast = _StepRepr.Handle_StepRepr_AssemblyComponentUsage_DownCast

class StepRepr_CompositeShapeAspect(StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_CompositeShapeAspect_swiginit(self, _StepRepr.new_StepRepr_CompositeShapeAspect(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_CompositeShapeAspect(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompositeShapeAspect
StepRepr_CompositeShapeAspect_swigregister = _StepRepr.StepRepr_CompositeShapeAspect_swigregister
StepRepr_CompositeShapeAspect_swigregister(StepRepr_CompositeShapeAspect)

class Handle_StepRepr_CompositeShapeAspect(Handle_StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_CompositeShapeAspect_swiginit(self, _StepRepr.new_Handle_StepRepr_CompositeShapeAspect(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_CompositeShapeAspect_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_CompositeShapeAspect
Handle_StepRepr_CompositeShapeAspect.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_CompositeShapeAspect_Nullify, None, Handle_StepRepr_CompositeShapeAspect)
Handle_StepRepr_CompositeShapeAspect.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_CompositeShapeAspect_IsNull, None, Handle_StepRepr_CompositeShapeAspect)
Handle_StepRepr_CompositeShapeAspect.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_CompositeShapeAspect_GetObject, None, Handle_StepRepr_CompositeShapeAspect)
Handle_StepRepr_CompositeShapeAspect_swigregister = _StepRepr.Handle_StepRepr_CompositeShapeAspect_swigregister
Handle_StepRepr_CompositeShapeAspect_swigregister(Handle_StepRepr_CompositeShapeAspect)

def Handle_StepRepr_CompositeShapeAspect_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_CompositeShapeAspect_DownCast(AnObject)
Handle_StepRepr_CompositeShapeAspect_DownCast = _StepRepr.Handle_StepRepr_CompositeShapeAspect_DownCast

class StepRepr_CompoundRepresentationItem(StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_CompoundRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_CompoundRepresentationItem(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param item_element:
        :type item_element: Handle_StepRepr_HArray1OfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_Init(self, *args)


    def ItemElement(self, *args):
        """
        :rtype: Handle_StepRepr_HArray1OfRepresentationItem

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_ItemElement(self, *args)


    def NbItemElement(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_NbItemElement(self, *args)


    def SetItemElement(self, *args):
        """
        :param item_element:
        :type item_element: Handle_StepRepr_HArray1OfRepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_SetItemElement(self, *args)


    def ItemElementValue(self, *args):
        """
        :param num:
        :type num: int
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_ItemElementValue(self, *args)


    def SetItemElementValue(self, *args):
        """
        :param num:
        :type num: int
        :param anelement:
        :type anelement: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_CompoundRepresentationItem_SetItemElementValue(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_CompoundRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_CompoundRepresentationItem
StepRepr_CompoundRepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_Init, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem.ItemElement = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_ItemElement, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem.NbItemElement = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_NbItemElement, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem.SetItemElement = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_SetItemElement, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem.ItemElementValue = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_ItemElementValue, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem.SetItemElementValue = new_instancemethod(_StepRepr.StepRepr_CompoundRepresentationItem_SetItemElementValue, None, StepRepr_CompoundRepresentationItem)
StepRepr_CompoundRepresentationItem_swigregister = _StepRepr.StepRepr_CompoundRepresentationItem_swigregister
StepRepr_CompoundRepresentationItem_swigregister(StepRepr_CompoundRepresentationItem)

class Handle_StepRepr_CompoundRepresentationItem(Handle_StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_CompoundRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_CompoundRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_CompoundRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_CompoundRepresentationItem
Handle_StepRepr_CompoundRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_CompoundRepresentationItem_Nullify, None, Handle_StepRepr_CompoundRepresentationItem)
Handle_StepRepr_CompoundRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_CompoundRepresentationItem_IsNull, None, Handle_StepRepr_CompoundRepresentationItem)
Handle_StepRepr_CompoundRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_CompoundRepresentationItem_GetObject, None, Handle_StepRepr_CompoundRepresentationItem)
Handle_StepRepr_CompoundRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_CompoundRepresentationItem_swigregister
Handle_StepRepr_CompoundRepresentationItem_swigregister(Handle_StepRepr_CompoundRepresentationItem)

def Handle_StepRepr_CompoundRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_CompoundRepresentationItem_DownCast(AnObject)
Handle_StepRepr_CompoundRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_CompoundRepresentationItem_DownCast

class StepRepr_DefinitionalRepresentation(StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DefinitionalRepresentation

        :rtype: None

        """
        _StepRepr.StepRepr_DefinitionalRepresentation_swiginit(self, _StepRepr.new_StepRepr_DefinitionalRepresentation(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_DefinitionalRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_DefinitionalRepresentation
StepRepr_DefinitionalRepresentation_swigregister = _StepRepr.StepRepr_DefinitionalRepresentation_swigregister
StepRepr_DefinitionalRepresentation_swigregister(StepRepr_DefinitionalRepresentation)

class Handle_StepRepr_DefinitionalRepresentation(Handle_StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_DefinitionalRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_DefinitionalRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_DefinitionalRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_DefinitionalRepresentation
Handle_StepRepr_DefinitionalRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_DefinitionalRepresentation_Nullify, None, Handle_StepRepr_DefinitionalRepresentation)
Handle_StepRepr_DefinitionalRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_DefinitionalRepresentation_IsNull, None, Handle_StepRepr_DefinitionalRepresentation)
Handle_StepRepr_DefinitionalRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_DefinitionalRepresentation_GetObject, None, Handle_StepRepr_DefinitionalRepresentation)
Handle_StepRepr_DefinitionalRepresentation_swigregister = _StepRepr.Handle_StepRepr_DefinitionalRepresentation_swigregister
Handle_StepRepr_DefinitionalRepresentation_swigregister(Handle_StepRepr_DefinitionalRepresentation)

def Handle_StepRepr_DefinitionalRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_DefinitionalRepresentation_DownCast(AnObject)
Handle_StepRepr_DefinitionalRepresentation_DownCast = _StepRepr.Handle_StepRepr_DefinitionalRepresentation_DownCast

class StepRepr_DerivedShapeAspect(StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_DerivedShapeAspect_swiginit(self, _StepRepr.new_StepRepr_DerivedShapeAspect(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_DerivedShapeAspect(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_DerivedShapeAspect
StepRepr_DerivedShapeAspect_swigregister = _StepRepr.StepRepr_DerivedShapeAspect_swigregister
StepRepr_DerivedShapeAspect_swigregister(StepRepr_DerivedShapeAspect)

class Handle_StepRepr_DerivedShapeAspect(Handle_StepRepr_ShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_DerivedShapeAspect_swiginit(self, _StepRepr.new_Handle_StepRepr_DerivedShapeAspect(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_DerivedShapeAspect_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_DerivedShapeAspect
Handle_StepRepr_DerivedShapeAspect.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_DerivedShapeAspect_Nullify, None, Handle_StepRepr_DerivedShapeAspect)
Handle_StepRepr_DerivedShapeAspect.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_DerivedShapeAspect_IsNull, None, Handle_StepRepr_DerivedShapeAspect)
Handle_StepRepr_DerivedShapeAspect.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_DerivedShapeAspect_GetObject, None, Handle_StepRepr_DerivedShapeAspect)
Handle_StepRepr_DerivedShapeAspect_swigregister = _StepRepr.Handle_StepRepr_DerivedShapeAspect_swigregister
Handle_StepRepr_DerivedShapeAspect_swigregister(Handle_StepRepr_DerivedShapeAspect)

def Handle_StepRepr_DerivedShapeAspect_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_DerivedShapeAspect_DownCast(AnObject)
Handle_StepRepr_DerivedShapeAspect_DownCast = _StepRepr.Handle_StepRepr_DerivedShapeAspect_DownCast

class StepRepr_DescriptiveRepresentationItem(StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a DescriptiveRepresentationItem

        :rtype: None

        """
        _StepRepr.StepRepr_DescriptiveRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_DescriptiveRepresentationItem(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: void

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: void

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_Init(self, *args)


    def SetDescription(self, *args):
        """
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_SetDescription(self, *args)


    def Description(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_DescriptiveRepresentationItem_Description(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_DescriptiveRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_DescriptiveRepresentationItem
StepRepr_DescriptiveRepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_DescriptiveRepresentationItem_Init, None, StepRepr_DescriptiveRepresentationItem)
StepRepr_DescriptiveRepresentationItem.SetDescription = new_instancemethod(_StepRepr.StepRepr_DescriptiveRepresentationItem_SetDescription, None, StepRepr_DescriptiveRepresentationItem)
StepRepr_DescriptiveRepresentationItem.Description = new_instancemethod(_StepRepr.StepRepr_DescriptiveRepresentationItem_Description, None, StepRepr_DescriptiveRepresentationItem)
StepRepr_DescriptiveRepresentationItem_swigregister = _StepRepr.StepRepr_DescriptiveRepresentationItem_swigregister
StepRepr_DescriptiveRepresentationItem_swigregister(StepRepr_DescriptiveRepresentationItem)

class Handle_StepRepr_DescriptiveRepresentationItem(Handle_StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_DescriptiveRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_DescriptiveRepresentationItem
Handle_StepRepr_DescriptiveRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_Nullify, None, Handle_StepRepr_DescriptiveRepresentationItem)
Handle_StepRepr_DescriptiveRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_IsNull, None, Handle_StepRepr_DescriptiveRepresentationItem)
Handle_StepRepr_DescriptiveRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_GetObject, None, Handle_StepRepr_DescriptiveRepresentationItem)
Handle_StepRepr_DescriptiveRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_swigregister
Handle_StepRepr_DescriptiveRepresentationItem_swigregister(Handle_StepRepr_DescriptiveRepresentationItem)

def Handle_StepRepr_DescriptiveRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_DownCast(AnObject)
Handle_StepRepr_DescriptiveRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_DescriptiveRepresentationItem_DownCast

class StepRepr_ExternallyDefinedRepresentation(StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ExternallyDefinedRepresentation_swiginit(self, _StepRepr.new_StepRepr_ExternallyDefinedRepresentation(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ExternallyDefinedRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ExternallyDefinedRepresentation
StepRepr_ExternallyDefinedRepresentation_swigregister = _StepRepr.StepRepr_ExternallyDefinedRepresentation_swigregister
StepRepr_ExternallyDefinedRepresentation_swigregister(StepRepr_ExternallyDefinedRepresentation)

class Handle_StepRepr_ExternallyDefinedRepresentation(Handle_StepRepr_Representation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_ExternallyDefinedRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ExternallyDefinedRepresentation
Handle_StepRepr_ExternallyDefinedRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_Nullify, None, Handle_StepRepr_ExternallyDefinedRepresentation)
Handle_StepRepr_ExternallyDefinedRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_IsNull, None, Handle_StepRepr_ExternallyDefinedRepresentation)
Handle_StepRepr_ExternallyDefinedRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_GetObject, None, Handle_StepRepr_ExternallyDefinedRepresentation)
Handle_StepRepr_ExternallyDefinedRepresentation_swigregister = _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_swigregister
Handle_StepRepr_ExternallyDefinedRepresentation_swigregister(Handle_StepRepr_ExternallyDefinedRepresentation)

def Handle_StepRepr_ExternallyDefinedRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_DownCast(AnObject)
Handle_StepRepr_ExternallyDefinedRepresentation_DownCast = _StepRepr.Handle_StepRepr_ExternallyDefinedRepresentation_DownCast

class StepRepr_GlobalUncertaintyAssignedContext(StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GlobalUncertaintyAssignedContext

        :rtype: None

        """
        _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_swiginit(self, _StepRepr.new_StepRepr_GlobalUncertaintyAssignedContext(*args))

    def Init(self, *args):
        """
        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :rtype: void

        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :param aUncertainty:
        :type aUncertainty: Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit &
        :rtype: void

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Init(self, *args)


    def SetUncertainty(self, *args):
        """
        :param aUncertainty:
        :type aUncertainty: Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_SetUncertainty(self, *args)


    def Uncertainty(self, *args):
        """
        :rtype: Handle_StepBasic_HArray1OfUncertaintyMeasureWithUnit

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Uncertainty(self, *args)


    def UncertaintyValue(self, *args):
        """
        :param num:
        :type num: int
        :rtype: Handle_StepBasic_UncertaintyMeasureWithUnit

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_UncertaintyValue(self, *args)


    def NbUncertainty(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_NbUncertainty(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_GlobalUncertaintyAssignedContext(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_GlobalUncertaintyAssignedContext
StepRepr_GlobalUncertaintyAssignedContext.Init = new_instancemethod(_StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Init, None, StepRepr_GlobalUncertaintyAssignedContext)
StepRepr_GlobalUncertaintyAssignedContext.SetUncertainty = new_instancemethod(_StepRepr.StepRepr_GlobalUncertaintyAssignedContext_SetUncertainty, None, StepRepr_GlobalUncertaintyAssignedContext)
StepRepr_GlobalUncertaintyAssignedContext.Uncertainty = new_instancemethod(_StepRepr.StepRepr_GlobalUncertaintyAssignedContext_Uncertainty, None, StepRepr_GlobalUncertaintyAssignedContext)
StepRepr_GlobalUncertaintyAssignedContext.UncertaintyValue = new_instancemethod(_StepRepr.StepRepr_GlobalUncertaintyAssignedContext_UncertaintyValue, None, StepRepr_GlobalUncertaintyAssignedContext)
StepRepr_GlobalUncertaintyAssignedContext.NbUncertainty = new_instancemethod(_StepRepr.StepRepr_GlobalUncertaintyAssignedContext_NbUncertainty, None, StepRepr_GlobalUncertaintyAssignedContext)
StepRepr_GlobalUncertaintyAssignedContext_swigregister = _StepRepr.StepRepr_GlobalUncertaintyAssignedContext_swigregister
StepRepr_GlobalUncertaintyAssignedContext_swigregister(StepRepr_GlobalUncertaintyAssignedContext)

class Handle_StepRepr_GlobalUncertaintyAssignedContext(Handle_StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_swiginit(self, _StepRepr.new_Handle_StepRepr_GlobalUncertaintyAssignedContext(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_GlobalUncertaintyAssignedContext
Handle_StepRepr_GlobalUncertaintyAssignedContext.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_Nullify, None, Handle_StepRepr_GlobalUncertaintyAssignedContext)
Handle_StepRepr_GlobalUncertaintyAssignedContext.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_IsNull, None, Handle_StepRepr_GlobalUncertaintyAssignedContext)
Handle_StepRepr_GlobalUncertaintyAssignedContext.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_GetObject, None, Handle_StepRepr_GlobalUncertaintyAssignedContext)
Handle_StepRepr_GlobalUncertaintyAssignedContext_swigregister = _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_swigregister
Handle_StepRepr_GlobalUncertaintyAssignedContext_swigregister(Handle_StepRepr_GlobalUncertaintyAssignedContext)

def Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast(AnObject)
Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast = _StepRepr.Handle_StepRepr_GlobalUncertaintyAssignedContext_DownCast

class StepRepr_GlobalUnitAssignedContext(StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a GlobalUnitAssignedContext

        :rtype: None

        """
        _StepRepr.StepRepr_GlobalUnitAssignedContext_swiginit(self, _StepRepr.new_StepRepr_GlobalUnitAssignedContext(*args))

    def Init(self, *args):
        """
        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :rtype: void

        :param aContextIdentifier:
        :type aContextIdentifier: Handle_TCollection_HAsciiString &
        :param aContextType:
        :type aContextType: Handle_TCollection_HAsciiString &
        :param aUnits:
        :type aUnits: Handle_StepBasic_HArray1OfNamedUnit &
        :rtype: void

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_Init(self, *args)


    def SetUnits(self, *args):
        """
        :param aUnits:
        :type aUnits: Handle_StepBasic_HArray1OfNamedUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_SetUnits(self, *args)


    def Units(self, *args):
        """
        :rtype: Handle_StepBasic_HArray1OfNamedUnit

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_Units(self, *args)


    def UnitsValue(self, *args):
        """
        :param num:
        :type num: int
        :rtype: Handle_StepBasic_NamedUnit

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_UnitsValue(self, *args)


    def NbUnits(self, *args):
        """
        :rtype: int

        """
        return _StepRepr.StepRepr_GlobalUnitAssignedContext_NbUnits(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_GlobalUnitAssignedContext(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_GlobalUnitAssignedContext
StepRepr_GlobalUnitAssignedContext.Init = new_instancemethod(_StepRepr.StepRepr_GlobalUnitAssignedContext_Init, None, StepRepr_GlobalUnitAssignedContext)
StepRepr_GlobalUnitAssignedContext.SetUnits = new_instancemethod(_StepRepr.StepRepr_GlobalUnitAssignedContext_SetUnits, None, StepRepr_GlobalUnitAssignedContext)
StepRepr_GlobalUnitAssignedContext.Units = new_instancemethod(_StepRepr.StepRepr_GlobalUnitAssignedContext_Units, None, StepRepr_GlobalUnitAssignedContext)
StepRepr_GlobalUnitAssignedContext.UnitsValue = new_instancemethod(_StepRepr.StepRepr_GlobalUnitAssignedContext_UnitsValue, None, StepRepr_GlobalUnitAssignedContext)
StepRepr_GlobalUnitAssignedContext.NbUnits = new_instancemethod(_StepRepr.StepRepr_GlobalUnitAssignedContext_NbUnits, None, StepRepr_GlobalUnitAssignedContext)
StepRepr_GlobalUnitAssignedContext_swigregister = _StepRepr.StepRepr_GlobalUnitAssignedContext_swigregister
StepRepr_GlobalUnitAssignedContext_swigregister(StepRepr_GlobalUnitAssignedContext)

class Handle_StepRepr_GlobalUnitAssignedContext(Handle_StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_swiginit(self, _StepRepr.new_Handle_StepRepr_GlobalUnitAssignedContext(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_GlobalUnitAssignedContext
Handle_StepRepr_GlobalUnitAssignedContext.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_Nullify, None, Handle_StepRepr_GlobalUnitAssignedContext)
Handle_StepRepr_GlobalUnitAssignedContext.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_IsNull, None, Handle_StepRepr_GlobalUnitAssignedContext)
Handle_StepRepr_GlobalUnitAssignedContext.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_GetObject, None, Handle_StepRepr_GlobalUnitAssignedContext)
Handle_StepRepr_GlobalUnitAssignedContext_swigregister = _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_swigregister
Handle_StepRepr_GlobalUnitAssignedContext_swigregister(Handle_StepRepr_GlobalUnitAssignedContext)

def Handle_StepRepr_GlobalUnitAssignedContext_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_DownCast(AnObject)
Handle_StepRepr_GlobalUnitAssignedContext_DownCast = _StepRepr.Handle_StepRepr_GlobalUnitAssignedContext_DownCast

class StepRepr_MakeFromUsageOption(StepRepr_ProductDefinitionUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_MakeFromUsageOption_swiginit(self, _StepRepr.new_StepRepr_MakeFromUsageOption(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aProductDefinitionRelationship_Id:
        :type aProductDefinitionRelationship_Id: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_Name:
        :type aProductDefinitionRelationship_Name: Handle_TCollection_HAsciiString &
        :param hasProductDefinitionRelationship_Description:
        :type hasProductDefinitionRelationship_Description: bool
        :param aProductDefinitionRelationship_Description:
        :type aProductDefinitionRelationship_Description: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_RelatingProductDefinition:
        :type aProductDefinitionRelationship_RelatingProductDefinition: Handle_StepBasic_ProductDefinition &
        :param aProductDefinitionRelationship_RelatedProductDefinition:
        :type aProductDefinitionRelationship_RelatedProductDefinition: Handle_StepBasic_ProductDefinition &
        :param aRanking:
        :type aRanking: int
        :param aRankingRationale:
        :type aRankingRationale: Handle_TCollection_HAsciiString &
        :param aQuantity:
        :type aQuantity: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Init(self, *args)


    def Ranking(self, *args):
        """
        * Returns field Ranking

        :rtype: int

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Ranking(self, *args)


    def SetRanking(self, *args):
        """
        * Set field Ranking

        :param Ranking:
        :type Ranking: int
        :rtype: None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetRanking(self, *args)


    def RankingRationale(self, *args):
        """
        * Returns field RankingRationale

        :rtype: Handle_TCollection_HAsciiString

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_RankingRationale(self, *args)


    def SetRankingRationale(self, *args):
        """
        * Set field RankingRationale

        :param RankingRationale:
        :type RankingRationale: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetRankingRationale(self, *args)


    def Quantity(self, *args):
        """
        * Returns field Quantity

        :rtype: Handle_StepBasic_MeasureWithUnit

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_Quantity(self, *args)


    def SetQuantity(self, *args):
        """
        * Set field Quantity

        :param Quantity:
        :type Quantity: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_MakeFromUsageOption_SetQuantity(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MakeFromUsageOption(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MakeFromUsageOption
StepRepr_MakeFromUsageOption.Init = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_Init, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.Ranking = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_Ranking, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.SetRanking = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_SetRanking, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.RankingRationale = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_RankingRationale, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.SetRankingRationale = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_SetRankingRationale, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.Quantity = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_Quantity, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption.SetQuantity = new_instancemethod(_StepRepr.StepRepr_MakeFromUsageOption_SetQuantity, None, StepRepr_MakeFromUsageOption)
StepRepr_MakeFromUsageOption_swigregister = _StepRepr.StepRepr_MakeFromUsageOption_swigregister
StepRepr_MakeFromUsageOption_swigregister(StepRepr_MakeFromUsageOption)

class Handle_StepRepr_MakeFromUsageOption(Handle_StepRepr_ProductDefinitionUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MakeFromUsageOption_swiginit(self, _StepRepr.new_Handle_StepRepr_MakeFromUsageOption(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MakeFromUsageOption_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MakeFromUsageOption
Handle_StepRepr_MakeFromUsageOption.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MakeFromUsageOption_Nullify, None, Handle_StepRepr_MakeFromUsageOption)
Handle_StepRepr_MakeFromUsageOption.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MakeFromUsageOption_IsNull, None, Handle_StepRepr_MakeFromUsageOption)
Handle_StepRepr_MakeFromUsageOption.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MakeFromUsageOption_GetObject, None, Handle_StepRepr_MakeFromUsageOption)
Handle_StepRepr_MakeFromUsageOption_swigregister = _StepRepr.Handle_StepRepr_MakeFromUsageOption_swigregister
Handle_StepRepr_MakeFromUsageOption_swigregister(Handle_StepRepr_MakeFromUsageOption)

def Handle_StepRepr_MakeFromUsageOption_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MakeFromUsageOption_DownCast(AnObject)
Handle_StepRepr_MakeFromUsageOption_DownCast = _StepRepr.Handle_StepRepr_MakeFromUsageOption_DownCast

class StepRepr_MappedItem(StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a MappedItem

        :rtype: None

        """
        _StepRepr.StepRepr_MappedItem_swiginit(self, _StepRepr.new_StepRepr_MappedItem(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :rtype: void

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aMappingSource:
        :type aMappingSource: Handle_StepRepr_RepresentationMap &
        :param aMappingTarget:
        :type aMappingTarget: Handle_StepRepr_RepresentationItem &
        :rtype: void

        """
        return _StepRepr.StepRepr_MappedItem_Init(self, *args)


    def SetMappingSource(self, *args):
        """
        :param aMappingSource:
        :type aMappingSource: Handle_StepRepr_RepresentationMap &
        :rtype: None

        """
        return _StepRepr.StepRepr_MappedItem_SetMappingSource(self, *args)


    def MappingSource(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationMap

        """
        return _StepRepr.StepRepr_MappedItem_MappingSource(self, *args)


    def SetMappingTarget(self, *args):
        """
        :param aMappingTarget:
        :type aMappingTarget: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_MappedItem_SetMappingTarget(self, *args)


    def MappingTarget(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_MappedItem_MappingTarget(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MappedItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MappedItem
StepRepr_MappedItem.Init = new_instancemethod(_StepRepr.StepRepr_MappedItem_Init, None, StepRepr_MappedItem)
StepRepr_MappedItem.SetMappingSource = new_instancemethod(_StepRepr.StepRepr_MappedItem_SetMappingSource, None, StepRepr_MappedItem)
StepRepr_MappedItem.MappingSource = new_instancemethod(_StepRepr.StepRepr_MappedItem_MappingSource, None, StepRepr_MappedItem)
StepRepr_MappedItem.SetMappingTarget = new_instancemethod(_StepRepr.StepRepr_MappedItem_SetMappingTarget, None, StepRepr_MappedItem)
StepRepr_MappedItem.MappingTarget = new_instancemethod(_StepRepr.StepRepr_MappedItem_MappingTarget, None, StepRepr_MappedItem)
StepRepr_MappedItem_swigregister = _StepRepr.StepRepr_MappedItem_swigregister
StepRepr_MappedItem_swigregister(StepRepr_MappedItem)

class Handle_StepRepr_MappedItem(Handle_StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MappedItem_swiginit(self, _StepRepr.new_Handle_StepRepr_MappedItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MappedItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MappedItem
Handle_StepRepr_MappedItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MappedItem_Nullify, None, Handle_StepRepr_MappedItem)
Handle_StepRepr_MappedItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MappedItem_IsNull, None, Handle_StepRepr_MappedItem)
Handle_StepRepr_MappedItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MappedItem_GetObject, None, Handle_StepRepr_MappedItem)
Handle_StepRepr_MappedItem_swigregister = _StepRepr.Handle_StepRepr_MappedItem_swigregister
Handle_StepRepr_MappedItem_swigregister(Handle_StepRepr_MappedItem)

def Handle_StepRepr_MappedItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MappedItem_DownCast(AnObject)
Handle_StepRepr_MappedItem_DownCast = _StepRepr.Handle_StepRepr_MappedItem_DownCast

class StepRepr_MaterialProperty(StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_MaterialProperty_swiginit(self, _StepRepr.new_StepRepr_MaterialProperty(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MaterialProperty(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialProperty
StepRepr_MaterialProperty_swigregister = _StepRepr.StepRepr_MaterialProperty_swigregister
StepRepr_MaterialProperty_swigregister(StepRepr_MaterialProperty)

class Handle_StepRepr_MaterialProperty(Handle_StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MaterialProperty_swiginit(self, _StepRepr.new_Handle_StepRepr_MaterialProperty(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MaterialProperty_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MaterialProperty
Handle_StepRepr_MaterialProperty.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialProperty_Nullify, None, Handle_StepRepr_MaterialProperty)
Handle_StepRepr_MaterialProperty.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialProperty_IsNull, None, Handle_StepRepr_MaterialProperty)
Handle_StepRepr_MaterialProperty.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialProperty_GetObject, None, Handle_StepRepr_MaterialProperty)
Handle_StepRepr_MaterialProperty_swigregister = _StepRepr.Handle_StepRepr_MaterialProperty_swigregister
Handle_StepRepr_MaterialProperty_swigregister(Handle_StepRepr_MaterialProperty)

def Handle_StepRepr_MaterialProperty_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MaterialProperty_DownCast(AnObject)
Handle_StepRepr_MaterialProperty_DownCast = _StepRepr.Handle_StepRepr_MaterialProperty_DownCast

class StepRepr_MaterialPropertyRepresentation(StepRepr_PropertyDefinitionRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_MaterialPropertyRepresentation_swiginit(self, _StepRepr.new_StepRepr_MaterialPropertyRepresentation(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aPropertyDefinitionRepresentation_Definition:
        :type aPropertyDefinitionRepresentation_Definition: StepRepr_RepresentedDefinition &
        :param aPropertyDefinitionRepresentation_UsedRepresentation:
        :type aPropertyDefinitionRepresentation_UsedRepresentation: Handle_StepRepr_Representation &
        :param aDependentEnvironment:
        :type aDependentEnvironment: Handle_StepRepr_DataEnvironment &
        :rtype: None

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_Init(self, *args)


    def DependentEnvironment(self, *args):
        """
        * Returns field DependentEnvironment

        :rtype: Handle_StepRepr_DataEnvironment

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_DependentEnvironment(self, *args)


    def SetDependentEnvironment(self, *args):
        """
        * Set field DependentEnvironment

        :param DependentEnvironment:
        :type DependentEnvironment: Handle_StepRepr_DataEnvironment &
        :rtype: None

        """
        return _StepRepr.StepRepr_MaterialPropertyRepresentation_SetDependentEnvironment(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MaterialPropertyRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MaterialPropertyRepresentation
StepRepr_MaterialPropertyRepresentation.Init = new_instancemethod(_StepRepr.StepRepr_MaterialPropertyRepresentation_Init, None, StepRepr_MaterialPropertyRepresentation)
StepRepr_MaterialPropertyRepresentation.DependentEnvironment = new_instancemethod(_StepRepr.StepRepr_MaterialPropertyRepresentation_DependentEnvironment, None, StepRepr_MaterialPropertyRepresentation)
StepRepr_MaterialPropertyRepresentation.SetDependentEnvironment = new_instancemethod(_StepRepr.StepRepr_MaterialPropertyRepresentation_SetDependentEnvironment, None, StepRepr_MaterialPropertyRepresentation)
StepRepr_MaterialPropertyRepresentation_swigregister = _StepRepr.StepRepr_MaterialPropertyRepresentation_swigregister
StepRepr_MaterialPropertyRepresentation_swigregister(StepRepr_MaterialPropertyRepresentation)

class Handle_StepRepr_MaterialPropertyRepresentation(Handle_StepRepr_PropertyDefinitionRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_MaterialPropertyRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MaterialPropertyRepresentation
Handle_StepRepr_MaterialPropertyRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_Nullify, None, Handle_StepRepr_MaterialPropertyRepresentation)
Handle_StepRepr_MaterialPropertyRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_IsNull, None, Handle_StepRepr_MaterialPropertyRepresentation)
Handle_StepRepr_MaterialPropertyRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_GetObject, None, Handle_StepRepr_MaterialPropertyRepresentation)
Handle_StepRepr_MaterialPropertyRepresentation_swigregister = _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_swigregister
Handle_StepRepr_MaterialPropertyRepresentation_swigregister(Handle_StepRepr_MaterialPropertyRepresentation)

def Handle_StepRepr_MaterialPropertyRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_DownCast(AnObject)
Handle_StepRepr_MaterialPropertyRepresentation_DownCast = _StepRepr.Handle_StepRepr_MaterialPropertyRepresentation_DownCast

class StepRepr_MeasureRepresentationItem(StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates empty object

        :rtype: None

        """
        _StepRepr.StepRepr_MeasureRepresentationItem_swiginit(self, _StepRepr.new_StepRepr_MeasureRepresentationItem(*args))

    def Init(self, *args):
        """
        * Init all fields

        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aValueComponent:
        :type aValueComponent: Handle_StepBasic_MeasureValueMember &
        :param aUnitComponent:
        :type aUnitComponent: StepBasic_Unit &
        :rtype: None

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_Init(self, *args)


    def SetMeasure(self, *args):
        """
        :param Measure:
        :type Measure: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_SetMeasure(self, *args)


    def Measure(self, *args):
        """
        :rtype: Handle_StepBasic_MeasureWithUnit

        """
        return _StepRepr.StepRepr_MeasureRepresentationItem_Measure(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_MeasureRepresentationItem(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_MeasureRepresentationItem
StepRepr_MeasureRepresentationItem.Init = new_instancemethod(_StepRepr.StepRepr_MeasureRepresentationItem_Init, None, StepRepr_MeasureRepresentationItem)
StepRepr_MeasureRepresentationItem.SetMeasure = new_instancemethod(_StepRepr.StepRepr_MeasureRepresentationItem_SetMeasure, None, StepRepr_MeasureRepresentationItem)
StepRepr_MeasureRepresentationItem.Measure = new_instancemethod(_StepRepr.StepRepr_MeasureRepresentationItem_Measure, None, StepRepr_MeasureRepresentationItem)
StepRepr_MeasureRepresentationItem_swigregister = _StepRepr.StepRepr_MeasureRepresentationItem_swigregister
StepRepr_MeasureRepresentationItem_swigregister(StepRepr_MeasureRepresentationItem)

class Handle_StepRepr_MeasureRepresentationItem(Handle_StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_MeasureRepresentationItem_swiginit(self, _StepRepr.new_Handle_StepRepr_MeasureRepresentationItem(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_MeasureRepresentationItem_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_MeasureRepresentationItem
Handle_StepRepr_MeasureRepresentationItem.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_MeasureRepresentationItem_Nullify, None, Handle_StepRepr_MeasureRepresentationItem)
Handle_StepRepr_MeasureRepresentationItem.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_MeasureRepresentationItem_IsNull, None, Handle_StepRepr_MeasureRepresentationItem)
Handle_StepRepr_MeasureRepresentationItem.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_MeasureRepresentationItem_GetObject, None, Handle_StepRepr_MeasureRepresentationItem)
Handle_StepRepr_MeasureRepresentationItem_swigregister = _StepRepr.Handle_StepRepr_MeasureRepresentationItem_swigregister
Handle_StepRepr_MeasureRepresentationItem_swigregister(Handle_StepRepr_MeasureRepresentationItem)

def Handle_StepRepr_MeasureRepresentationItem_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_MeasureRepresentationItem_DownCast(AnObject)
Handle_StepRepr_MeasureRepresentationItem_DownCast = _StepRepr.Handle_StepRepr_MeasureRepresentationItem_DownCast

class StepRepr_ParametricRepresentationContext(StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Returns a ParametricRepresentationContext

        :rtype: None

        """
        _StepRepr.StepRepr_ParametricRepresentationContext_swiginit(self, _StepRepr.new_StepRepr_ParametricRepresentationContext(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ParametricRepresentationContext(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ParametricRepresentationContext
StepRepr_ParametricRepresentationContext_swigregister = _StepRepr.StepRepr_ParametricRepresentationContext_swigregister
StepRepr_ParametricRepresentationContext_swigregister(StepRepr_ParametricRepresentationContext)

class Handle_StepRepr_ParametricRepresentationContext(Handle_StepRepr_RepresentationContext):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ParametricRepresentationContext_swiginit(self, _StepRepr.new_Handle_StepRepr_ParametricRepresentationContext(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ParametricRepresentationContext_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ParametricRepresentationContext
Handle_StepRepr_ParametricRepresentationContext.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ParametricRepresentationContext_Nullify, None, Handle_StepRepr_ParametricRepresentationContext)
Handle_StepRepr_ParametricRepresentationContext.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ParametricRepresentationContext_IsNull, None, Handle_StepRepr_ParametricRepresentationContext)
Handle_StepRepr_ParametricRepresentationContext.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ParametricRepresentationContext_GetObject, None, Handle_StepRepr_ParametricRepresentationContext)
Handle_StepRepr_ParametricRepresentationContext_swigregister = _StepRepr.Handle_StepRepr_ParametricRepresentationContext_swigregister
Handle_StepRepr_ParametricRepresentationContext_swigregister(Handle_StepRepr_ParametricRepresentationContext)

def Handle_StepRepr_ParametricRepresentationContext_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ParametricRepresentationContext_DownCast(AnObject)
Handle_StepRepr_ParametricRepresentationContext_DownCast = _StepRepr.Handle_StepRepr_ParametricRepresentationContext_DownCast

class StepRepr_ProductDefinitionShape(StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ProductDefinitionShape_swiginit(self, _StepRepr.new_StepRepr_ProductDefinitionShape(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ProductDefinitionShape(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ProductDefinitionShape
StepRepr_ProductDefinitionShape_swigregister = _StepRepr.StepRepr_ProductDefinitionShape_swigregister
StepRepr_ProductDefinitionShape_swigregister(StepRepr_ProductDefinitionShape)

class Handle_StepRepr_ProductDefinitionShape(Handle_StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ProductDefinitionShape_swiginit(self, _StepRepr.new_Handle_StepRepr_ProductDefinitionShape(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ProductDefinitionShape_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ProductDefinitionShape
Handle_StepRepr_ProductDefinitionShape.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionShape_Nullify, None, Handle_StepRepr_ProductDefinitionShape)
Handle_StepRepr_ProductDefinitionShape.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionShape_IsNull, None, Handle_StepRepr_ProductDefinitionShape)
Handle_StepRepr_ProductDefinitionShape.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ProductDefinitionShape_GetObject, None, Handle_StepRepr_ProductDefinitionShape)
Handle_StepRepr_ProductDefinitionShape_swigregister = _StepRepr.Handle_StepRepr_ProductDefinitionShape_swigregister
Handle_StepRepr_ProductDefinitionShape_swigregister(Handle_StepRepr_ProductDefinitionShape)

def Handle_StepRepr_ProductDefinitionShape_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ProductDefinitionShape_DownCast(AnObject)
Handle_StepRepr_ProductDefinitionShape_DownCast = _StepRepr.Handle_StepRepr_ProductDefinitionShape_DownCast

class StepRepr_ReprItemAndLengthMeasureWithUnit(StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_swiginit(self, _StepRepr.new_StepRepr_ReprItemAndLengthMeasureWithUnit(*args))

    def Init(self, *args):
        """
        :param aMWU:
        :type aMWU: Handle_StepBasic_MeasureWithUnit &
        :param aRI:
        :type aRI: Handle_StepRepr_RepresentationItem &
        :rtype: None

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_Init(self, *args)


    def SetLengthMeasureWithUnit(self, *args):
        """
        :param aLMWU:
        :type aLMWU: Handle_StepBasic_LengthMeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_SetLengthMeasureWithUnit(self, *args)


    def GetLengthMeasureWithUnit(self, *args):
        """
        :rtype: Handle_StepBasic_LengthMeasureWithUnit

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetLengthMeasureWithUnit(self, *args)


    def GetMeasureRepresentationItem(self, *args):
        """
        :rtype: Handle_StepRepr_MeasureRepresentationItem

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetMeasureRepresentationItem(self, *args)


    def SetMeasureWithUnit(self, *args):
        """
        :param aMWU:
        :type aMWU: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_SetMeasureWithUnit(self, *args)


    def GetMeasureWithUnit(self, *args):
        """
        :rtype: Handle_StepBasic_MeasureWithUnit

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetMeasureWithUnit(self, *args)


    def GetRepresentationItem(self, *args):
        """
        :rtype: Handle_StepRepr_RepresentationItem

        """
        return _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetRepresentationItem(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ReprItemAndLengthMeasureWithUnit(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ReprItemAndLengthMeasureWithUnit
StepRepr_ReprItemAndLengthMeasureWithUnit.Init = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_Init, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.SetLengthMeasureWithUnit = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_SetLengthMeasureWithUnit, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.GetLengthMeasureWithUnit = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetLengthMeasureWithUnit, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.GetMeasureRepresentationItem = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetMeasureRepresentationItem, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.SetMeasureWithUnit = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_SetMeasureWithUnit, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.GetMeasureWithUnit = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetMeasureWithUnit, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit.GetRepresentationItem = new_instancemethod(_StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_GetRepresentationItem, None, StepRepr_ReprItemAndLengthMeasureWithUnit)
StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister = _StepRepr.StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister
StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister(StepRepr_ReprItemAndLengthMeasureWithUnit)

class Handle_StepRepr_ReprItemAndLengthMeasureWithUnit(Handle_StepRepr_RepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_swiginit(self, _StepRepr.new_Handle_StepRepr_ReprItemAndLengthMeasureWithUnit(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ReprItemAndLengthMeasureWithUnit
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_Nullify, None, Handle_StepRepr_ReprItemAndLengthMeasureWithUnit)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_IsNull, None, Handle_StepRepr_ReprItemAndLengthMeasureWithUnit)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_GetObject, None, Handle_StepRepr_ReprItemAndLengthMeasureWithUnit)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_swigregister(Handle_StepRepr_ReprItemAndLengthMeasureWithUnit)

def Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast(AnObject)
Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast = _StepRepr.Handle_StepRepr_ReprItemAndLengthMeasureWithUnit_DownCast

class StepRepr_ShapeAspectDerivingRelationship(StepRepr_ShapeAspectRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ShapeAspectDerivingRelationship_swiginit(self, _StepRepr.new_StepRepr_ShapeAspectDerivingRelationship(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeAspectDerivingRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectDerivingRelationship
StepRepr_ShapeAspectDerivingRelationship_swigregister = _StepRepr.StepRepr_ShapeAspectDerivingRelationship_swigregister
StepRepr_ShapeAspectDerivingRelationship_swigregister(StepRepr_ShapeAspectDerivingRelationship)

class Handle_StepRepr_ShapeAspectDerivingRelationship(Handle_StepRepr_ShapeAspectRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeAspectDerivingRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeAspectDerivingRelationship
Handle_StepRepr_ShapeAspectDerivingRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_Nullify, None, Handle_StepRepr_ShapeAspectDerivingRelationship)
Handle_StepRepr_ShapeAspectDerivingRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_IsNull, None, Handle_StepRepr_ShapeAspectDerivingRelationship)
Handle_StepRepr_ShapeAspectDerivingRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_GetObject, None, Handle_StepRepr_ShapeAspectDerivingRelationship)
Handle_StepRepr_ShapeAspectDerivingRelationship_swigregister = _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_swigregister
Handle_StepRepr_ShapeAspectDerivingRelationship_swigregister(Handle_StepRepr_ShapeAspectDerivingRelationship)

def Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast(AnObject)
Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectDerivingRelationship_DownCast

class StepRepr_ShapeAspectTransition(StepRepr_ShapeAspectRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_ShapeAspectTransition_swiginit(self, _StepRepr.new_StepRepr_ShapeAspectTransition(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeAspectTransition(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeAspectTransition
StepRepr_ShapeAspectTransition_swigregister = _StepRepr.StepRepr_ShapeAspectTransition_swigregister
StepRepr_ShapeAspectTransition_swigregister(StepRepr_ShapeAspectTransition)

class Handle_StepRepr_ShapeAspectTransition(Handle_StepRepr_ShapeAspectRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeAspectTransition_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeAspectTransition(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeAspectTransition_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeAspectTransition
Handle_StepRepr_ShapeAspectTransition.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectTransition_Nullify, None, Handle_StepRepr_ShapeAspectTransition)
Handle_StepRepr_ShapeAspectTransition.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectTransition_IsNull, None, Handle_StepRepr_ShapeAspectTransition)
Handle_StepRepr_ShapeAspectTransition.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeAspectTransition_GetObject, None, Handle_StepRepr_ShapeAspectTransition)
Handle_StepRepr_ShapeAspectTransition_swigregister = _StepRepr.Handle_StepRepr_ShapeAspectTransition_swigregister
Handle_StepRepr_ShapeAspectTransition_swigregister(Handle_StepRepr_ShapeAspectTransition)

def Handle_StepRepr_ShapeAspectTransition_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeAspectTransition_DownCast(AnObject)
Handle_StepRepr_ShapeAspectTransition_DownCast = _StepRepr.Handle_StepRepr_ShapeAspectTransition_DownCast

class StepRepr_ShapeRepresentationRelationship(StepRepr_RepresentationRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ShapeRepresentationRelationship_swiginit(self, _StepRepr.new_StepRepr_ShapeRepresentationRelationship(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeRepresentationRelationship(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeRepresentationRelationship
StepRepr_ShapeRepresentationRelationship_swigregister = _StepRepr.StepRepr_ShapeRepresentationRelationship_swigregister
StepRepr_ShapeRepresentationRelationship_swigregister(StepRepr_ShapeRepresentationRelationship)

class Handle_StepRepr_ShapeRepresentationRelationship(Handle_StepRepr_RepresentationRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeRepresentationRelationship(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeRepresentationRelationship
Handle_StepRepr_ShapeRepresentationRelationship.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_Nullify, None, Handle_StepRepr_ShapeRepresentationRelationship)
Handle_StepRepr_ShapeRepresentationRelationship.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_IsNull, None, Handle_StepRepr_ShapeRepresentationRelationship)
Handle_StepRepr_ShapeRepresentationRelationship.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_GetObject, None, Handle_StepRepr_ShapeRepresentationRelationship)
Handle_StepRepr_ShapeRepresentationRelationship_swigregister = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_swigregister
Handle_StepRepr_ShapeRepresentationRelationship_swigregister(Handle_StepRepr_ShapeRepresentationRelationship)

def Handle_StepRepr_ShapeRepresentationRelationship_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_DownCast(AnObject)
Handle_StepRepr_ShapeRepresentationRelationship_DownCast = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationship_DownCast

class StepRepr_StructuralResponseProperty(StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_StructuralResponseProperty_swiginit(self, _StepRepr.new_StepRepr_StructuralResponseProperty(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_StructuralResponseProperty(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_StructuralResponseProperty
StepRepr_StructuralResponseProperty_swigregister = _StepRepr.StepRepr_StructuralResponseProperty_swigregister
StepRepr_StructuralResponseProperty_swigregister(StepRepr_StructuralResponseProperty)

class Handle_StepRepr_StructuralResponseProperty(Handle_StepRepr_PropertyDefinition):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_StructuralResponseProperty_swiginit(self, _StepRepr.new_Handle_StepRepr_StructuralResponseProperty(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_StructuralResponseProperty_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_StructuralResponseProperty
Handle_StepRepr_StructuralResponseProperty.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponseProperty_Nullify, None, Handle_StepRepr_StructuralResponseProperty)
Handle_StepRepr_StructuralResponseProperty.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponseProperty_IsNull, None, Handle_StepRepr_StructuralResponseProperty)
Handle_StepRepr_StructuralResponseProperty.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponseProperty_GetObject, None, Handle_StepRepr_StructuralResponseProperty)
Handle_StepRepr_StructuralResponseProperty_swigregister = _StepRepr.Handle_StepRepr_StructuralResponseProperty_swigregister
Handle_StepRepr_StructuralResponseProperty_swigregister(Handle_StepRepr_StructuralResponseProperty)

def Handle_StepRepr_StructuralResponseProperty_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_StructuralResponseProperty_DownCast(AnObject)
Handle_StepRepr_StructuralResponseProperty_DownCast = _StepRepr.Handle_StepRepr_StructuralResponseProperty_DownCast

class StepRepr_StructuralResponsePropertyDefinitionRepresentation(StepRepr_PropertyDefinitionRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_StructuralResponsePropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_StepRepr_StructuralResponsePropertyDefinitionRepresentation(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_StructuralResponsePropertyDefinitionRepresentation
StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister = _StepRepr.StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister
StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister(StepRepr_StructuralResponsePropertyDefinitionRepresentation)

class Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation(Handle_StepRepr_PropertyDefinitionRepresentation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_swiginit(self, _StepRepr.new_Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_Nullify, None, Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_IsNull, None, Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_GetObject, None, Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister = _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_swigregister(Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation)

def Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast(AnObject)
Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast = _StepRepr.Handle_StepRepr_StructuralResponsePropertyDefinitionRepresentation_DownCast

class StepRepr_Extension(StepRepr_DerivedShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_Extension_swiginit(self, _StepRepr.new_StepRepr_Extension(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_Extension(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_Extension
StepRepr_Extension_swigregister = _StepRepr.StepRepr_Extension_swigregister
StepRepr_Extension_swigregister(StepRepr_Extension)

class Handle_StepRepr_Extension(Handle_StepRepr_DerivedShapeAspect):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_Extension_swiginit(self, _StepRepr.new_Handle_StepRepr_Extension(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_Extension_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_Extension
Handle_StepRepr_Extension.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_Extension_Nullify, None, Handle_StepRepr_Extension)
Handle_StepRepr_Extension.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_Extension_IsNull, None, Handle_StepRepr_Extension)
Handle_StepRepr_Extension.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_Extension_GetObject, None, Handle_StepRepr_Extension)
Handle_StepRepr_Extension_swigregister = _StepRepr.Handle_StepRepr_Extension_swigregister
Handle_StepRepr_Extension_swigregister(Handle_StepRepr_Extension)

def Handle_StepRepr_Extension_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_Extension_DownCast(AnObject)
Handle_StepRepr_Extension_DownCast = _StepRepr.Handle_StepRepr_Extension_DownCast

class StepRepr_NextAssemblyUsageOccurrence(StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_NextAssemblyUsageOccurrence_swiginit(self, _StepRepr.new_StepRepr_NextAssemblyUsageOccurrence(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_NextAssemblyUsageOccurrence(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_NextAssemblyUsageOccurrence
StepRepr_NextAssemblyUsageOccurrence_swigregister = _StepRepr.StepRepr_NextAssemblyUsageOccurrence_swigregister
StepRepr_NextAssemblyUsageOccurrence_swigregister(StepRepr_NextAssemblyUsageOccurrence)

class Handle_StepRepr_NextAssemblyUsageOccurrence(Handle_StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_swiginit(self, _StepRepr.new_Handle_StepRepr_NextAssemblyUsageOccurrence(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_NextAssemblyUsageOccurrence
Handle_StepRepr_NextAssemblyUsageOccurrence.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_Nullify, None, Handle_StepRepr_NextAssemblyUsageOccurrence)
Handle_StepRepr_NextAssemblyUsageOccurrence.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_IsNull, None, Handle_StepRepr_NextAssemblyUsageOccurrence)
Handle_StepRepr_NextAssemblyUsageOccurrence.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_GetObject, None, Handle_StepRepr_NextAssemblyUsageOccurrence)
Handle_StepRepr_NextAssemblyUsageOccurrence_swigregister = _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_swigregister
Handle_StepRepr_NextAssemblyUsageOccurrence_swigregister(Handle_StepRepr_NextAssemblyUsageOccurrence)

def Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast(AnObject)
Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_NextAssemblyUsageOccurrence_DownCast

class StepRepr_PromissoryUsageOccurrence(StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_PromissoryUsageOccurrence_swiginit(self, _StepRepr.new_StepRepr_PromissoryUsageOccurrence(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_PromissoryUsageOccurrence(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_PromissoryUsageOccurrence
StepRepr_PromissoryUsageOccurrence_swigregister = _StepRepr.StepRepr_PromissoryUsageOccurrence_swigregister
StepRepr_PromissoryUsageOccurrence_swigregister(StepRepr_PromissoryUsageOccurrence)

class Handle_StepRepr_PromissoryUsageOccurrence(Handle_StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_swiginit(self, _StepRepr.new_Handle_StepRepr_PromissoryUsageOccurrence(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_PromissoryUsageOccurrence
Handle_StepRepr_PromissoryUsageOccurrence.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_Nullify, None, Handle_StepRepr_PromissoryUsageOccurrence)
Handle_StepRepr_PromissoryUsageOccurrence.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_IsNull, None, Handle_StepRepr_PromissoryUsageOccurrence)
Handle_StepRepr_PromissoryUsageOccurrence.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_GetObject, None, Handle_StepRepr_PromissoryUsageOccurrence)
Handle_StepRepr_PromissoryUsageOccurrence_swigregister = _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_swigregister
Handle_StepRepr_PromissoryUsageOccurrence_swigregister(Handle_StepRepr_PromissoryUsageOccurrence)

def Handle_StepRepr_PromissoryUsageOccurrence_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_DownCast(AnObject)
Handle_StepRepr_PromissoryUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_PromissoryUsageOccurrence_DownCast

class StepRepr_QuantifiedAssemblyComponentUsage(StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_swiginit(self, _StepRepr.new_StepRepr_QuantifiedAssemblyComponentUsage(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aProductDefinitionRelationship_Id:
        :type aProductDefinitionRelationship_Id: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_Name:
        :type aProductDefinitionRelationship_Name: Handle_TCollection_HAsciiString &
        :param hasProductDefinitionRelationship_Description:
        :type hasProductDefinitionRelationship_Description: bool
        :param aProductDefinitionRelationship_Description:
        :type aProductDefinitionRelationship_Description: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_RelatingProductDefinition:
        :type aProductDefinitionRelationship_RelatingProductDefinition: Handle_StepBasic_ProductDefinition &
        :param aProductDefinitionRelationship_RelatedProductDefinition:
        :type aProductDefinitionRelationship_RelatedProductDefinition: Handle_StepBasic_ProductDefinition &
        :param hasAssemblyComponentUsage_ReferenceDesignator:
        :type hasAssemblyComponentUsage_ReferenceDesignator: bool
        :param aAssemblyComponentUsage_ReferenceDesignator:
        :type aAssemblyComponentUsage_ReferenceDesignator: Handle_TCollection_HAsciiString &
        :param aQuantity:
        :type aQuantity: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Init(self, *args)


    def Quantity(self, *args):
        """
        * Returns field Quantity

        :rtype: Handle_StepBasic_MeasureWithUnit

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Quantity(self, *args)


    def SetQuantity(self, *args):
        """
        * Set field Quantity

        :param Quantity:
        :type Quantity: Handle_StepBasic_MeasureWithUnit &
        :rtype: None

        """
        return _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_SetQuantity(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_QuantifiedAssemblyComponentUsage(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_QuantifiedAssemblyComponentUsage
StepRepr_QuantifiedAssemblyComponentUsage.Init = new_instancemethod(_StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Init, None, StepRepr_QuantifiedAssemblyComponentUsage)
StepRepr_QuantifiedAssemblyComponentUsage.Quantity = new_instancemethod(_StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_Quantity, None, StepRepr_QuantifiedAssemblyComponentUsage)
StepRepr_QuantifiedAssemblyComponentUsage.SetQuantity = new_instancemethod(_StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_SetQuantity, None, StepRepr_QuantifiedAssemblyComponentUsage)
StepRepr_QuantifiedAssemblyComponentUsage_swigregister = _StepRepr.StepRepr_QuantifiedAssemblyComponentUsage_swigregister
StepRepr_QuantifiedAssemblyComponentUsage_swigregister(StepRepr_QuantifiedAssemblyComponentUsage)

class Handle_StepRepr_QuantifiedAssemblyComponentUsage(Handle_StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_swiginit(self, _StepRepr.new_Handle_StepRepr_QuantifiedAssemblyComponentUsage(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_QuantifiedAssemblyComponentUsage
Handle_StepRepr_QuantifiedAssemblyComponentUsage.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_Nullify, None, Handle_StepRepr_QuantifiedAssemblyComponentUsage)
Handle_StepRepr_QuantifiedAssemblyComponentUsage.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_IsNull, None, Handle_StepRepr_QuantifiedAssemblyComponentUsage)
Handle_StepRepr_QuantifiedAssemblyComponentUsage.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_GetObject, None, Handle_StepRepr_QuantifiedAssemblyComponentUsage)
Handle_StepRepr_QuantifiedAssemblyComponentUsage_swigregister = _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_swigregister
Handle_StepRepr_QuantifiedAssemblyComponentUsage_swigregister(Handle_StepRepr_QuantifiedAssemblyComponentUsage)

def Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast(AnObject)
Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast = _StepRepr.Handle_StepRepr_QuantifiedAssemblyComponentUsage_DownCast

class StepRepr_RepresentationRelationshipWithTransformation(StepRepr_ShapeRepresentationRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_swiginit(self, _StepRepr.new_StepRepr_RepresentationRelationshipWithTransformation(*args))

    def Init(self, *args):
        """
        :param aName:
        :type aName: Handle_TCollection_HAsciiString &
        :param aDescription:
        :type aDescription: Handle_TCollection_HAsciiString &
        :param aRep1:
        :type aRep1: Handle_StepRepr_Representation &
        :param aRep2:
        :type aRep2: Handle_StepRepr_Representation &
        :param aTransf:
        :type aTransf: StepRepr_Transformation &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_Init(self, *args)


    def TransformationOperator(self, *args):
        """
        :rtype: StepRepr_Transformation

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_TransformationOperator(self, *args)


    def SetTransformationOperator(self, *args):
        """
        :param aTrans:
        :type aTrans: StepRepr_Transformation &
        :rtype: None

        """
        return _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_SetTransformationOperator(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_RepresentationRelationshipWithTransformation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_RepresentationRelationshipWithTransformation
StepRepr_RepresentationRelationshipWithTransformation.Init = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationshipWithTransformation_Init, None, StepRepr_RepresentationRelationshipWithTransformation)
StepRepr_RepresentationRelationshipWithTransformation.TransformationOperator = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationshipWithTransformation_TransformationOperator, None, StepRepr_RepresentationRelationshipWithTransformation)
StepRepr_RepresentationRelationshipWithTransformation.SetTransformationOperator = new_instancemethod(_StepRepr.StepRepr_RepresentationRelationshipWithTransformation_SetTransformationOperator, None, StepRepr_RepresentationRelationshipWithTransformation)
StepRepr_RepresentationRelationshipWithTransformation_swigregister = _StepRepr.StepRepr_RepresentationRelationshipWithTransformation_swigregister
StepRepr_RepresentationRelationshipWithTransformation_swigregister(StepRepr_RepresentationRelationshipWithTransformation)

class Handle_StepRepr_RepresentationRelationshipWithTransformation(Handle_StepRepr_ShapeRepresentationRelationship):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_swiginit(self, _StepRepr.new_Handle_StepRepr_RepresentationRelationshipWithTransformation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_RepresentationRelationshipWithTransformation
Handle_StepRepr_RepresentationRelationshipWithTransformation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_Nullify, None, Handle_StepRepr_RepresentationRelationshipWithTransformation)
Handle_StepRepr_RepresentationRelationshipWithTransformation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_IsNull, None, Handle_StepRepr_RepresentationRelationshipWithTransformation)
Handle_StepRepr_RepresentationRelationshipWithTransformation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_GetObject, None, Handle_StepRepr_RepresentationRelationshipWithTransformation)
Handle_StepRepr_RepresentationRelationshipWithTransformation_swigregister = _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_swigregister
Handle_StepRepr_RepresentationRelationshipWithTransformation_swigregister(Handle_StepRepr_RepresentationRelationshipWithTransformation)

def Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast(AnObject)
Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast = _StepRepr.Handle_StepRepr_RepresentationRelationshipWithTransformation_DownCast

class StepRepr_SpecifiedHigherUsageOccurrence(StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Empty constructor

        :rtype: None

        """
        _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_swiginit(self, _StepRepr.new_StepRepr_SpecifiedHigherUsageOccurrence(*args))

    def Init(self, *args):
        """
        * Initialize all fields (own and inherited)

        :param aProductDefinitionRelationship_Id:
        :type aProductDefinitionRelationship_Id: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_Name:
        :type aProductDefinitionRelationship_Name: Handle_TCollection_HAsciiString &
        :param hasProductDefinitionRelationship_Description:
        :type hasProductDefinitionRelationship_Description: bool
        :param aProductDefinitionRelationship_Description:
        :type aProductDefinitionRelationship_Description: Handle_TCollection_HAsciiString &
        :param aProductDefinitionRelationship_RelatingProductDefinition:
        :type aProductDefinitionRelationship_RelatingProductDefinition: Handle_StepBasic_ProductDefinition &
        :param aProductDefinitionRelationship_RelatedProductDefinition:
        :type aProductDefinitionRelationship_RelatedProductDefinition: Handle_StepBasic_ProductDefinition &
        :param hasAssemblyComponentUsage_ReferenceDesignator:
        :type hasAssemblyComponentUsage_ReferenceDesignator: bool
        :param aAssemblyComponentUsage_ReferenceDesignator:
        :type aAssemblyComponentUsage_ReferenceDesignator: Handle_TCollection_HAsciiString &
        :param aUpperUsage:
        :type aUpperUsage: Handle_StepRepr_AssemblyComponentUsage &
        :param aNextUsage:
        :type aNextUsage: Handle_StepRepr_NextAssemblyUsageOccurrence &
        :rtype: None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_Init(self, *args)


    def UpperUsage(self, *args):
        """
        * Returns field UpperUsage

        :rtype: Handle_StepRepr_AssemblyComponentUsage

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_UpperUsage(self, *args)


    def SetUpperUsage(self, *args):
        """
        * Set field UpperUsage

        :param UpperUsage:
        :type UpperUsage: Handle_StepRepr_AssemblyComponentUsage &
        :rtype: None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetUpperUsage(self, *args)


    def NextUsage(self, *args):
        """
        * Returns field NextUsage

        :rtype: Handle_StepRepr_NextAssemblyUsageOccurrence

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_NextUsage(self, *args)


    def SetNextUsage(self, *args):
        """
        * Set field NextUsage

        :param NextUsage:
        :type NextUsage: Handle_StepRepr_NextAssemblyUsageOccurrence &
        :rtype: None

        """
        return _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetNextUsage(self, *args)


    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_SpecifiedHigherUsageOccurrence(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_SpecifiedHigherUsageOccurrence
StepRepr_SpecifiedHigherUsageOccurrence.Init = new_instancemethod(_StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_Init, None, StepRepr_SpecifiedHigherUsageOccurrence)
StepRepr_SpecifiedHigherUsageOccurrence.UpperUsage = new_instancemethod(_StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_UpperUsage, None, StepRepr_SpecifiedHigherUsageOccurrence)
StepRepr_SpecifiedHigherUsageOccurrence.SetUpperUsage = new_instancemethod(_StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetUpperUsage, None, StepRepr_SpecifiedHigherUsageOccurrence)
StepRepr_SpecifiedHigherUsageOccurrence.NextUsage = new_instancemethod(_StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_NextUsage, None, StepRepr_SpecifiedHigherUsageOccurrence)
StepRepr_SpecifiedHigherUsageOccurrence.SetNextUsage = new_instancemethod(_StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_SetNextUsage, None, StepRepr_SpecifiedHigherUsageOccurrence)
StepRepr_SpecifiedHigherUsageOccurrence_swigregister = _StepRepr.StepRepr_SpecifiedHigherUsageOccurrence_swigregister
StepRepr_SpecifiedHigherUsageOccurrence_swigregister(StepRepr_SpecifiedHigherUsageOccurrence)

class Handle_StepRepr_SpecifiedHigherUsageOccurrence(Handle_StepRepr_AssemblyComponentUsage):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_swiginit(self, _StepRepr.new_Handle_StepRepr_SpecifiedHigherUsageOccurrence(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_SpecifiedHigherUsageOccurrence
Handle_StepRepr_SpecifiedHigherUsageOccurrence.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_Nullify, None, Handle_StepRepr_SpecifiedHigherUsageOccurrence)
Handle_StepRepr_SpecifiedHigherUsageOccurrence.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_IsNull, None, Handle_StepRepr_SpecifiedHigherUsageOccurrence)
Handle_StepRepr_SpecifiedHigherUsageOccurrence.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_GetObject, None, Handle_StepRepr_SpecifiedHigherUsageOccurrence)
Handle_StepRepr_SpecifiedHigherUsageOccurrence_swigregister = _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_swigregister
Handle_StepRepr_SpecifiedHigherUsageOccurrence_swigregister(Handle_StepRepr_SpecifiedHigherUsageOccurrence)

def Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast(AnObject)
Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast = _StepRepr.Handle_StepRepr_SpecifiedHigherUsageOccurrence_DownCast

class StepRepr_ValueRange(StepRepr_CompoundRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ValueRange_swiginit(self, _StepRepr.new_StepRepr_ValueRange(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ValueRange(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ValueRange
StepRepr_ValueRange_swigregister = _StepRepr.StepRepr_ValueRange_swigregister
StepRepr_ValueRange_swigregister(StepRepr_ValueRange)

class Handle_StepRepr_ValueRange(Handle_StepRepr_CompoundRepresentationItem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ValueRange_swiginit(self, _StepRepr.new_Handle_StepRepr_ValueRange(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ValueRange_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ValueRange
Handle_StepRepr_ValueRange.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ValueRange_Nullify, None, Handle_StepRepr_ValueRange)
Handle_StepRepr_ValueRange.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ValueRange_IsNull, None, Handle_StepRepr_ValueRange)
Handle_StepRepr_ValueRange.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ValueRange_GetObject, None, Handle_StepRepr_ValueRange)
Handle_StepRepr_ValueRange_swigregister = _StepRepr.Handle_StepRepr_ValueRange_swigregister
Handle_StepRepr_ValueRange_swigregister(Handle_StepRepr_ValueRange)

def Handle_StepRepr_ValueRange_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ValueRange_DownCast(AnObject)
Handle_StepRepr_ValueRange_DownCast = _StepRepr.Handle_StepRepr_ValueRange_DownCast

class StepRepr_ShapeRepresentationRelationshipWithTransformation(StepRepr_RepresentationRelationshipWithTransformation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _StepRepr.StepRepr_ShapeRepresentationRelationshipWithTransformation_swiginit(self, _StepRepr.new_StepRepr_ShapeRepresentationRelationshipWithTransformation(*args))

    def GetHandle(self):
        try:
            return self.thisHandle
        except:
            self.thisHandle = Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation(self)
            self.thisown = False
            return self.thisHandle

    __swig_destroy__ = _StepRepr.delete_StepRepr_ShapeRepresentationRelationshipWithTransformation
StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister = _StepRepr.StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister
StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister(StepRepr_ShapeRepresentationRelationshipWithTransformation)

class Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation(Handle_StepRepr_RepresentationRelationshipWithTransformation):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_swiginit(self, _StepRepr.new_Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation(*args))

            # register the handle in the base object
        if len(args) > 0:
            register_handle(self, args[0])



    DownCast = staticmethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast)
    __swig_destroy__ = _StepRepr.delete_Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation.Nullify = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_Nullify, None, Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation.IsNull = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_IsNull, None, Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation.GetObject = new_instancemethod(_StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_GetObject, None, Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_swigregister(Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation)

def Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast(AnObject):
    return _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast(AnObject)
Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast = _StepRepr.Handle_StepRepr_ShapeRepresentationRelationshipWithTransformation_DownCast



